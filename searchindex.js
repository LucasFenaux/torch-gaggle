Search.setIndex({"docnames": ["gaggle", "gaggle.arguments", "gaggle.base_nns", "gaggle.ga", "gaggle.operators", "gaggle.operators.crossover", "gaggle.operators.crossover.base_crossovers", "gaggle.operators.mutation", "gaggle.operators.mutation.base_mutations", "gaggle.operators.selection", "gaggle.operators.selection.base_selections", "gaggle.population", "gaggle.population.base_individuals", "gaggle.problem", "gaggle.problem.base_problems", "gaggle.problem.dataset", "gaggle.problem.dataset.base_datasets", "gaggle.problem.environment", "gaggle.problem.leap", "gaggle.supervisor", "gaggle.utils", "index", "modules"], "filenames": ["gaggle.rst", "gaggle.arguments.rst", "gaggle.base_nns.rst", "gaggle.ga.rst", "gaggle.operators.rst", "gaggle.operators.crossover.rst", "gaggle.operators.crossover.base_crossovers.rst", "gaggle.operators.mutation.rst", "gaggle.operators.mutation.base_mutations.rst", "gaggle.operators.selection.rst", "gaggle.operators.selection.base_selections.rst", "gaggle.population.rst", "gaggle.population.base_individuals.rst", "gaggle.problem.rst", "gaggle.problem.base_problems.rst", "gaggle.problem.dataset.rst", "gaggle.problem.dataset.base_datasets.rst", "gaggle.problem.environment.rst", "gaggle.problem.leap.rst", "gaggle.supervisor.rst", "gaggle.utils.rst", "index.rst", "modules.rst"], "titles": ["Gaggle", "Arguments", "Base_nns", "Ga", "Operators", "Crossover", "Base_crossovers", "Mutation", "Base_mutations", "Selection", "Base_selections", "Population", "Base_individuals", "Problem", "Base_problems", "Dataset", "Base_datasets", "Environment", "Leap", "Supervisor", "Utils", "Welcome to gaggle\u2019s documentation!", "gaggle"], "terms": {"supervisor": [0, 21, 22], "ga_supervisor": [0, 22], "problem": [0, 1, 3, 11, 12, 14, 15, 16, 17, 18, 19, 21, 22], "base_problem": [0, 13, 22], "dataset": [0, 3, 11, 13, 16, 17, 22], "environ": [0, 1, 13, 22], "leap": [0, 13, 22], "problem_factori": [0, 22], "ga": [0, 1, 21, 22], "ga_factori": [0, 22], "simple_ga": [0, 22], "oper": [0, 3, 5, 6, 7, 8, 9, 10, 11, 19, 21, 22], "crossov": [0, 1, 3, 4, 6, 9, 19, 22], "mutat": [0, 1, 3, 4, 8, 11, 19, 22], "select": [0, 1, 3, 4, 10, 19, 22], "popul": [0, 3, 5, 6, 7, 10, 12, 13, 15, 19, 21, 22], "base_individu": [0, 11, 22], "individu": [0, 1, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 17, 18, 19, 20, 22], "individual_factori": [0, 22], "population_manag": [0, 3, 13, 15, 22], "base_nn": [0, 1, 21, 22], "dqn": [0, 1, 22], "drqn": [0, 1, 22], "lenet": [0, 1, 19, 22], "resnet": [0, 22], "resnet_x": [0, 22], "snet": [0, 1, 22], "argument": [0, 3, 12, 13, 14, 15, 19, 20, 21, 22], "config_arg": [0, 22], "ga_arg": [0, 3, 5, 6, 7, 8, 9, 10, 11, 22], "individual_arg": [0, 3, 11, 12, 22], "outdir_arg": [0, 3, 11, 12, 22], "problem_arg": [0, 3, 13, 14, 15, 16, 17, 18, 22], "sys_arg": [0, 3, 11, 12, 13, 14, 15, 16, 17, 18, 22], "util": [0, 21, 22], "individual_help": [0, 22], "metric": [0, 3, 22], "numpy_help": [0, 22], "smooth_valu": [0, 22], "special_imag": [0, 22], "special_print": [0, 22], "torch_help": [0, 22], "web": [0, 2, 22], "class": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "gaggl": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "configarg": [1, 22], "config_path": 1, "str": [1, 3, 11, 12, 13, 17, 19, 20], "none": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "sourc": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "base": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "object": [1, 3, 5, 7, 9, 11, 13, 15, 16, 17, 18, 19, 20], "allow": [1, 11, 13, 15, 18, 19], "combin": 1, "all": [1, 2, 3, 10, 11, 12, 20], "other": [1, 11, 13, 15], "togeth": 1, "read": 1, "from": [1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 20], "config": 1, "file": [1, 2, 3, 11, 12], "experi": 1, "args_to_config": 1, "gaarg": [1, 3, 5, 6, 7, 8, 9, 10, 11, 22], "population_s": [1, 19], "100": [1, 19], "uniform": [1, 4, 5, 7, 10, 19], "parent_survival_r": [1, 5, 19], "0": [1, 2, 5, 9, 10, 19, 20], "5": [1, 10, 19], "mutate_protect": [1, 19], "fals": [1, 3, 10, 11, 12, 19], "normal": [1, 7, 15, 19], "mutation_std": [1, 8, 19], "05": [1, 19], "mutation_ch": [1, 8, 19], "01": [1, 19], "weight": [1, 9, 19, 20], "elit": [1, 9, 11, 19], "1": [1, 2, 10, 19, 20], "num_par": [1, 19], "20": [1, 2], "ga_nam": [1, 3, 19], "simpl": [1, 3, 19], "gener": [1, 3, 5, 6, 7, 9, 10, 11, 13, 15, 17, 19, 20], "k_point": [1, 5, 19], "tournament_s": [1, 10, 19], "3": [1, 10, 15, 19], "selection_pressur": [1, 10, 19], "uniform_mutation_min_v": [1, 8, 19], "uniform_mutation_max_v": [1, 8, 19], "save_best_everi": [1, 19], "save_every_epoch": 1, "eval_every_gener": [1, 19], "use_fresh": [1, 13, 15, 19], "true": [1, 3, 10, 11, 12, 13, 15, 16, 19], "individualarg": [1, 3, 11, 12, 22], "individual_nam": [1, 11, 19], "nn": [1, 11, 12, 19], "param_lower_bound": 1, "param_upper_bound": 1, "individual_s": [1, 19], "model_nam": [1, 19], "resolut": 1, "32": [1, 2], "base_model_weight": 1, "model_ckpt": 1, "random_init": 1, "output_dir": 1, "outdirarg": [1, 3, 11, 12, 22], "root": [1, 19], "name": [1, 2, 3, 5, 7, 9, 11, 12, 13, 15, 17, 19], "folder_numb": 1, "problemarg": [1, 3, 13, 14, 15, 16, 17, 18, 22], "problem_nam": [1, 13, 19], "cartpol": [1, 13, 17], "batch_siz": [1, 19, 20], "eval_batch_s": [1, 19], "dataset_root": [1, 19], "max_size_train": 1, "max_size_v": 1, "seed": [1, 15, 19, 20], "1337": [1, 15, 19], "step": [1, 19], "run": [1, 2, 5, 7, 9, 18, 19, 20], "gui": [1, 19], "stop_on_don": 1, "sysarg": [1, 3, 11, 12, 13, 14, 15, 16, 17, 18, 22], "num_work": 1, "8": 1, "devic": [1, 19], "cuda": 1, "gpu_id": 1, "use_dataload": 1, "verbos": 1, "exist": [1, 3, 5, 7, 9, 11, 13, 15, 19], "get_arg": 1, "get_ga_arg": 1, "get_individual_arg": 1, "classmethod": [1, 3, 5, 7, 9, 11, 13, 15, 17], "get_kei": [1, 4, 5, 7, 9, 15, 17], "return": [1, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "list": [1, 3, 5, 6, 7, 9, 11, 13, 15, 17, 20], "kei": [1, 3, 5, 7, 9, 11, 12, 13, 15, 17], "yml": 1, "get_outdir_arg": 1, "get_problem_arg": 1, "get_sys_arg": 1, "updat": [1, 3, 4, 5, 7, 9, 11, 13, 15, 17, 20], "config_kei": 1, "arg_subclass": 1, "add": [1, 3, 5, 7, 8, 9, 11, 12, 15, 17], "replac": [1, 10], "one": [1, 2, 3, 11, 15], "paramet": [1, 2, 3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20], "ad": [1, 3, 5, 7, 8, 9, 11, 15, 17], "call": [1, 2, 3, 5, 7, 9, 11, 13, 14, 17, 18, 19], "when": [1, 11, 13, 18, 19, 20], "us": [1, 2, 3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 17, 19, 20], "given": [1, 10, 11, 13, 14, 15, 17, 18, 19], "note": [1, 10, 11, 12, 20], "need": [1, 2, 3, 5, 7, 9, 10, 11, 13, 14, 15, 17, 18, 19], "an": [1, 3, 5, 7, 9, 10, 11, 12, 15, 20], "un": 1, "initi": [1, 3, 5, 7, 9, 11, 12, 13, 15, 16, 17, 19], "parse_arg": [1, 22], "helper": 1, "function": [1, 2, 3, 5, 7, 9, 10, 13, 14, 15, 17, 18, 19], "pars": 1, "cli": 1, "valu": [1, 3, 5, 7, 8, 9, 10, 11, 15, 17, 19, 20], "int": [1, 2, 3, 9, 10, 11, 12, 13, 15, 19, 20], "float": [1, 3, 11, 13, 14, 15, 17, 18, 19, 20], "bool": [1, 3, 11, 12, 13, 15, 16, 19], "contain": [1, 15, 16, 20], "relat": [1, 3, 11], "algorithm": [1, 3, 19], "get_base_model": 1, "arg": [1, 3, 11, 12, 13, 14, 15, 17, 18, 19], "kwarg": [1, 3, 11, 12, 13, 14, 15, 17, 18, 19], "get": [1, 11, 15, 16, 17, 20], "model": [1, 2, 11, 12], "specifi": [1, 3, 5, 7, 8, 10, 19], "self": [1, 3, 11, 12, 15, 16, 19], "field": [1, 11], "pass": [1, 2, 12, 13, 14, 17, 18, 19, 20], "down": 1, "modul": [1, 2, 4, 11, 12, 21, 22], "unless": 1, "custom": [1, 2, 11, 13, 15, 19], "wa": [1, 11, 20], "cl": 1, "avail": [1, 3, 5, 7, 9, 11, 13, 15, 17], "pre": [1, 2, 3, 5, 7, 9, 11, 13, 15, 17, 19], "built": [1, 15, 17], "can": [1, 3, 5, 7, 9, 10, 11, 12, 13, 15, 17, 19], "creat": [1, 3, 5, 6, 7, 9, 11, 15, 17, 20], "string": [1, 15, 17, 20], "lenet5": [1, 2, 22], "resnet20": [1, 2, 22], "snet_cifar": 1, "snetcifar": [1, 2, 22], "snet_mnist": 1, "snetmnist": [1, 2, 22], "new": [1, 3, 5, 7, 9, 10, 11, 13, 15, 17, 19], "dictionari": [1, 3, 5, 7, 9, 11, 12, 13, 15, 17, 20], "lookup": [1, 3, 5, 7, 9, 11, 13, 15, 17], "alreadi": [1, 3, 5, 7, 9, 11, 15, 17], "output": [1, 3, 10, 12], "directori": 1, "create_folder_nam": 1, "uniqu": [1, 11], "folder": [1, 3], "get_folder_path": 1, "unus": 1, "system": [1, 15], "set": [1, 9, 10, 11, 12, 13, 15, 19], "variabl": 1, "set_gpu_id": 1, "num_input": 2, "4": [2, 10, 13], "num_output": 2, "2": [2, 5, 6, 10, 20], "hidden_s": 2, "16": 2, "forward": [2, 11, 12, 13, 14, 17, 18], "x": [2, 12, 20], "defin": [2, 13, 20], "comput": [2, 3, 11, 20], "perform": [2, 15], "everi": 2, "should": [2, 9, 10, 11, 12, 13, 15, 16], "overridden": 2, "subclass": 2, "although": 2, "recip": 2, "within": [2, 8, 18], "thi": [2, 3, 5, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19], "instanc": [2, 10, 13, 15], "afterward": 2, "instead": [2, 10], "sinc": [2, 11], "former": 2, "take": [2, 17, 18, 19], "care": [2, 20], "regist": [2, 5, 7, 9, 13, 15], "hook": 2, "while": [2, 5], "latter": 2, "silent": 2, "ignor": 2, "them": [2, 13], "hidden": 2, "num_class": [2, 15], "10": [2, 10, 20], "pytorch": [2, 11, 12], "For": [2, 5, 8, 10, 13], "activ": 2, "see": [2, 6, 10, 12, 13], "preact_resnet": 2, "py": 2, "refer": 2, "kaim": 2, "he": 2, "xiangyu": 2, "zhang": 2, "shaoq": 2, "ren": 2, "jian": 2, "sun": 2, "deep": 2, "residu": 2, "learn": [2, 15, 16, 17], "imag": [2, 16, 20], "recognit": 2, "arxiv": 2, "1512": 2, "03385": 2, "resnet101": [2, 22], "resnet152": [2, 22], "resnet18": [2, 22], "resnet34": [2, 22], "resnet50": [2, 22], "properli": 2, "implement": [2, 3], "": [2, 11, 13, 14, 17, 18], "cifar10": [2, 13, 15], "describ": [2, 19], "paper": 2, "The": [2, 3, 5, 7, 9, 10, 11, 13, 15, 16, 20], "structur": 2, "i": [2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "huge": 2, "influenc": 2, "which": [2, 10, 11, 19], "imagenet": 2, "doesn": 2, "t": 2, "have": [2, 10, 11, 15, 16], "option": [2, 10, 11], "A": [2, 5, 6, 7, 8, 10, 11, 12, 15, 16], "ident": 2, "moreov": 2, "most": 2, "copi": [2, 15], "past": 2, "torchvis": 2, "ha": [2, 6, 11, 12, 13], "wrong": 2, "number": [2, 10, 15], "param": [2, 3, 5, 6, 7, 8, 11, 12, 13, 17, 20], "proper": 2, "fair": 2, "comparis": 2, "etc": [2, 10, 11, 12], "follow": [2, 3, 6], "layer": [2, 16], "27m": 2, "resnet32": [2, 22], "46m": 2, "resnet44": [2, 22], "44": 2, "66m": 2, "resnet56": [2, 22], "56": 2, "85m": 2, "resnet110": [2, 22], "110": 2, "7m": 2, "resnet1202": [2, 22], "1202": 2, "19": 2, "4m": [2, 20], "inde": 2, "http": [2, 6], "github": 2, "com": [2, 6], "vision": 2, "blob": 2, "master": 2, "If": [2, 10, 11, 13, 19], "you": 2, "work": 2, "pleas": [2, 10, 13], "don": 2, "forget": 2, "mention": 2, "author": 2, "yerlan": 2, "idelbayev": 2, "block": 2, "num_block": 2, "small": 2, "convolut": 2, "cifar": 2, "149k": 2, "mnist": [2, 13, 15, 19], "populationmanag": [3, 5, 7, 9, 10, 11, 13, 15, 19, 22], "parent": [3, 5, 6, 7, 9, 10, 11], "ani": [3, 5, 7, 9, 10, 11, 12, 13, 17, 19, 20], "store": [3, 5, 7, 9, 11, 13, 15, 16, 17], "inform": [3, 11], "organ": 3, "order": 3, "abstract": [3, 5, 7, 9, 11, 13], "train": [3, 11, 12, 13, 14, 15, 16, 17, 18], "evolv": 3, "overwritten": 3, "gafactori": [3, 22], "factori": [3, 5, 7, 9, 11, 13, 15, 17], "said": [3, 5, 7, 9, 11, 13, 15, 17], "uniniti": [3, 5, 7, 9, 11, 13, 15, 17], "from_ga_arg": [3, 4, 5, 7, 9], "request": [3, 5, 7, 9, 11, 13, 15], "done": [3, 5, 7, 9, 11, 13, 15], "attribut": [3, 5, 7, 9, 11, 13, 15, 16], "simplega": [3, 22], "It": [3, 5, 7, 9, 11, 12, 13, 15, 17, 20], "genet": [3, 19], "mitchel": 3, "display_metr": 3, "display_train": 3, "display_test": 3, "displai": 3, "saved_metr": 3, "onli": [3, 8, 11, 12, 15], "save": [3, 11, 12], "whose": [3, 12], "ar": [3, 10, 12, 13, 15, 17, 19], "metrics_to_plot": 3, "graph": 3, "also": [3, 11, 13, 19], "get_fitness_metr": 3, "fit": [3, 11, 13, 14, 15, 17, 18, 19], "dict": [3, 11, 12, 13, 15, 20], "slice": [3, 11, 12, 13, 15], "mode": [3, 11, 12], "basic": [3, 5, 7, 15], "like": [3, 10], "avg": [3, 20], "best": [3, 10], "worst": [3, 10], "whether": [3, 10, 11, 12, 13, 14, 15, 17, 18], "what": [3, 11], "save_individu": 3, "provid": [3, 11, 12, 20], "well": [3, 11, 20], "its": [3, 10, 11, 18], "path": [3, 11, 12], "pt": 3, "save_metr": 3, "save_train": 3, "save_test": 3, "test": [3, 13, 14, 17, 18], "associ": [3, 10, 11, 15, 17, 18], "without": [3, 10, 15], "manag": [3, 5, 7, 9, 10, 11, 13], "callback": 3, "callabl": [3, 13, 14, 17, 18, 19], "display_train_metr": [3, 19], "display_test_metr": [3, 19], "begin": 3, "process": [3, 16, 17], "train_one_gener": 3, "standard": [3, 8, 10, 11, 15], "pipelin": [3, 11], "base_crossov": [4, 5, 22], "k_point_crossov": [4, 5], "kpointcrossov": [4, 5, 6], "uniform_crossov": [4, 5], "uniformcrossov": [4, 5, 6], "children_per_crossov": [4, 5, 6, 9, 10], "crossover_individu": [4, 5, 6], "crossover_pop": [4, 5], "mates_per_crossov": [4, 5, 6, 9, 10], "crossover_factori": [4, 22], "crossoverfactori": [4, 5], "base_mut": [4, 7, 22], "normal_mut": [4, 7], "normalmut": [4, 7, 8], "uniformmut": [4, 7, 8], "mutate_individu": [4, 7, 8], "mutate_pop": [4, 7], "mutation_factori": [4, 22], "mutationfactori": [4, 7], "base_select": [4, 9, 22], "probabilistic_tournament_select": [4, 9], "probabilistictournamentselect": [4, 9, 10], "choic": [4, 10], "relative_weighted_select": [4, 9], "relativeweightedselect": [4, 9, 10], "simple_tournament_select": [4, 9], "simpletournamentselect": [4, 9, 10], "truncation_select": [4, 9], "truncationselect": [4, 9, 10], "weighted_select": [4, 9], "weightedselect": [4, 9, 10], "select_al": [4, 9], "select_par": [4, 9, 10], "select_protect": [4, 9], "selection_factori": [4, 22], "selectionfactori": [4, 9], "give": [5, 7, 9, 19], "whole": [5, 7, 10], "onc": [5, 7], "cross": [5, 11], "over": [5, 10, 11, 12, 20], "singl": [5, 6, 7, 8, 10, 11, 19], "pair": 5, "spefici": [5, 6, 7, 8], "how": [5, 6, 7, 8, 13], "children": [5, 6], "typic": [5, 6, 12], "indivu": 5, "popualt": 5, "maintain": 5, "protect": [5, 9, 11], "each": [5, 6, 7, 8, 10, 11, 12, 13], "probabl": [5, 6, 8, 10], "hold": [5, 7, 11, 13], "current": [5, 7, 9, 15, 16], "modifi": [5, 7, 11, 12, 15, 20], "point": 6, "k": [6, 10], "tutori": 6, "more": [6, 10, 15], "depth": 6, "descript": 6, "www": 6, "tutorialspoint": 6, "genetic_algorithm": 6, "genetic_algorithms_crossov": 6, "htm": 6, "two": 6, "deprecated_crossover_individu": 6, "where": [6, 10, 11, 12, 20], "gene": [6, 8, 11, 12, 20], "equal": 6, "come": 6, "either": 6, "after": [7, 8, 20], "member": [7, 12], "uniform_mut": [7, 8], "real": 8, "chromosom": [8, 11], "nois": 8, "gaussian": 8, "distribut": [8, 10], "deviat": 8, "rang": 8, "both": [9, 10, 13], "protoect": 9, "fucntion": 9, "mate": [9, 10, 11], "tupl": [9, 10, 11, 15, 16, 20], "By": [9, 11, 12], "default": [9, 10, 11, 12, 13, 14, 15], "turn": 9, "off": 9, "probabilistic_tourna": 9, "relative_weight": 9, "simple_tourna": 9, "truncat": 9, "varient": 10, "tournament": 10, "we": [10, 11, 12, 15, 20], "uniformli": 10, "choos": 10, "Then": 10, "out": 10, "p": 10, "second": 10, "prob": 10, "third": 10, "procedur": 10, "repeat": 10, "total": 10, "iid": 10, "participant_id": 10, "arrai": [10, 12], "participants_fit": 10, "size": [10, 11, 12, 15], "random": [10, 15], "sampl": [10, 15], "d": 10, "version": 10, "7": 10, "code": 10, "numpi": [10, 11, 12], "method": [10, 11, 13, 15], "quick": 10, "start": 10, "ndarrai": [10, 12], "element": 10, "were": [10, 11], "np": 10, "arang": 10, "shape": 10, "e": [10, 12], "g": [10, 12], "m": 10, "n": [10, 15, 20], "drawn": 10, "case": [10, 11, 20], "boolean": [10, 11], "mean": [10, 11, 20], "multipl": [10, 16], "time": [10, 12, 13], "entri": 10, "assum": [10, 11], "type": [10, 11, 12, 13], "item": 10, "rais": 10, "valueerror": 10, "less": 10, "than": [10, 11, 12], "zero": 10, "dimension": 10, "vector": 10, "differ": 10, "length": [10, 11, 12], "greater": 10, "randint": 10, "shuffl": 10, "permut": 10, "user": [10, 19], "through": 10, "effici": 10, "sampler": 10, "produc": 10, "optim": [10, 12, 15, 19], "even": [10, 20], "len": 10, "row": 10, "possibl": 10, "axi": 10, "keyword": 10, "exampl": [10, 12, 13, 20], "equival": [10, 12], "non": 10, "6": [10, 16], "abov": 10, "arbitrari": 10, "just": [10, 14], "integ": 10, "aa_milne_arr": 10, "pooh": 10, "rabbit": 10, "piglet": 10, "christoph": 10, "dtype": 10, "u11": 10, "variat": 10, "roulett": 10, "wheel": 10, "subtract": 10, "fitt": 10, "candid": [10, 11], "99": 10, "so": 10, "assign": 10, "chanc": 10, "simpli": 10, "determinisitci": 10, "want": [10, 13, 19], "top": 10, "neg": 10, "shift": 10, "make": 10, "posit": 10, "nn_individu": [11, 22], "numpy_individu": [11, 22], "pytorch_individu": [11, 22], "rl_individu": [11, 22], "solut": 11, "aka": 11, "gene_pool": [11, 12, 20], "entir": [11, 13], "format": 11, "config_gene_pool": 11, "gene_pool_config": 11, "config_individual_arg": 11, "individual_args_config": 11, "apply_bound": 11, "lower_bound": 11, "upper_bound": 11, "appli": [11, 20], "bound": 11, "static": [11, 15], "clip": 11, "tensor": [11, 12, 15, 20], "torch": [11, 12, 20], "wrapper": [11, 12, 15, 17, 18], "doe": [11, 12, 20], "support": [11, 17], "overwrit": 11, "desir": [11, 15], "behavior": [11, 12, 13, 15], "min": [11, 20], "max": [11, 20], "flatten": [11, 12, 20], "do": [11, 12, 20], "metadata": [11, 12, 20], "reconstruct": [11, 12], "directli": [11, 12], "link": [11, 12], "back": [11, 12, 20], "genome_s": [11, 12], "generate_gene_pool": [11, 12], "inner": [11, 12], "get_gene_pool": 11, "pool": [11, 12, 20], "otherwis": [11, 12], "get_genome_s": 11, "genom": 11, "been": [11, 12], "repres": [11, 12, 13, 14, 15, 17, 18], "rule": [11, 12], "individualfactori": [11, 22], "from_individual_arg": 11, "nnindividu": [11, 12], "numpyindividu": [11, 12], "pytorchindividu": [11, 12], "rl": [11, 12, 13], "rlindividu": [11, 12], "indidividualfactori": 11, "default_individu": 11, "keep": 11, "track": [11, 20], "To": [11, 15], "avoid": 11, "wast": 11, "fresh": [11, 13], "recomput": 11, "last": 11, "interfac": [11, 19], "evolutionari": 11, "access": [11, 15, 20], "meta": 11, "requir": [11, 12], "chosen": 11, "simplifi": 11, "id": [11, 17], "thei": [11, 12, 13, 19], "own": 11, "lower": 11, "upper": 11, "create_buff": 11, "initial_valu": 11, "storag": 11, "buffer": 11, "data": [11, 15, 16], "build": [11, 15], "commun": 11, "anoth": 11, "serv": 11, "anyth": 11, "eval": [11, 12], "evalu": [11, 12, 13, 14, 15, 17, 18, 19], "specif": [11, 15], "configur": 11, "get_buff": 11, "get_fit": 11, "get_fresh": 11, "get_gene_count": 11, "same": [11, 20], "first": [11, 12], "assumpt": 11, "get_individu": 11, "individual_idx": 11, "get_individual_fit": 11, "individual_id": 11, "get_mating_tupl": 11, "get_num_protect": 11, "get_par": 11, "get_popul": 11, "get_protect": 11, "get_to_mut": 11, "is_fresh": 11, "check": [11, 12, 13], "reflect": 11, "set_fresh": [11, 13], "set_individual_fit": [11, 13], "update_buff": 11, "new_valu": 11, "update_mating_tupl": 11, "new_tupl": 11, "update_par": 11, "new_par": 11, "update_popul": 11, "new_individu": 11, "new_fresh": 11, "update_protect": 11, "new_protect": 11, "surviv": 11, "next": 11, "matter": [11, 13, 14, 17, 18], "similar": [11, 12], "update_to_mut": 11, "new_to_mut": 11, "dure": [11, 19], "config_base_model_state_dict": 12, "base_model_state_dict": 12, "debug": 12, "debug_tick": 12, "clear": 12, "plot": [12, 15], "effect": 12, "certain": [12, 13, 14, 17, 18], "document": [12, 13], "particular": 12, "detail": 12, "affect": 12, "dropout": 12, "batchnorm": 12, "local": 12, "disabl": [12, 15], "grad": 12, "doc": 12, "comparison": 12, "between": 12, "sever": 12, "mechan": 12, "mai": 12, "confus": 12, "first_tim": 12, "someth": 12, "invok": [12, 19], "load": [12, 20], "content": 12, "ckpt": 12, "recurs": 12, "iter": 12, "yield": 12, "submodul": 12, "direct": 12, "xdoctest": 12, "skip": 12, "undefin": 12, "var": 12, "print": 12, "20l": 12, "1l": 12, "5l": 12, "np_param": 12, "argmax": 12, "predict": 12, "usual": [12, 15], "action": 12, "rather": 12, "logit": 12, "functional_problem": [13, 22], "base_dataset": [13, 15, 22], "classification_problem": [13, 22], "dataset_factori": [13, 22], "environment_factori": [13, 22], "rl_problem": [13, 22], "leap_problem": [13, 22], "abc": [13, 15], "definit": 13, "charg": 13, "solv": [13, 19], "addit": [13, 14, 17, 18, 19], "would": [13, 14, 17, 18], "evaluate_popul": [13, 15], "update_manag": [13, 15], "introduc": 13, "parallel": 13, "alwai": 13, "being": 13, "problemfactori": [13, 18, 22], "classif": [13, 15, 20], "convert_and_register_leap_problem": 13, "shortcut": 13, "convert": 13, "our": [13, 19], "from_problem_arg": [13, 15, 17], "problem_typ": 13, "gymwrapp": [13, 17], "register_problem": 13, "registr": 13, "registrable_problem": 13, "respect": 13, "classificationproblem": [13, 15], "datasetfactori": [13, 15], "rlproblem": [13, 17], "environmentfactori": [13, 17], "functionalproblem": 14, "fitness_funct": [14, 19], "predefin": 14, "input": 14, "beyond": 14, "machin": [15, 16], "valid": 15, "gpu": 15, "speed": 15, "up": 15, "batch": 15, "infer": 15, "recommend": 15, "datawrapp": 15, "target": [15, 16], "get_data_and_target": [15, 16], "flexibl": 15, "index": [15, 21], "enable_norm": 15, "enabl": 15, "get_data_and_transform": 15, "transform": [15, 20], "print_class_distribut": 15, "random_subset": 15, "subset": 15, "remove_class": 15, "target_class": 15, "altern": 15, "idx": 15, "visual": 15, "sq_size": 15, "squar": 15, "without_norm": 15, "from_data": 15, "label": 15, "dataset_nam": 15, "featur": 16, "tini": 16, "alex": 16, "krizhevski": 16, "2009": 16, "deng": 16, "l": 16, "2012": 16, "databas": 16, "handwritten": 16, "digit": 16, "research": 16, "ieee": 16, "signal": 16, "magazin": 16, "29": 16, "141": 16, "142": 16, "from_gym_env_id": 17, "env_id": 17, "gym": 17, "env": 17, "openai": 17, "environment_nam": 17, "reinforc": 17, "mainli": 17, "api": 17, "leapproblem": 18, "framework": [18, 19], "registrableleapproblem": 18, "constructor": 18, "convert_leap_problem": 18, "gasupervisor": [19, 22], "cpu": 19, "50": 19, "line": 19, "At": 19, "minimum": 19, "__init__": 19, "set_custom_fit": 19, "setup": 19, "befor": 19, "necessari": 19, "from_gene_pool": [20, 22], "from_tensor": [20, 22], "recreat": 20, "modif": 20, "newli": 20, "from_gene_pool_no_metadata": [20, 22], "about": 20, "inplac": 20, "acquir": 20, "origin": 20, "though": 20, "still": 20, "accuraci": [20, 22], "y_pred": 20, "y": 20, "tmp_seed": [20, 22], "smoothedvalu": [20, 22], "window_s": 20, "fmt": 20, "3f": 20, "seri": 20, "smooth": 20, "window": 20, "global": 20, "averag": 20, "properti": 20, "global_avg": 20, "median": 20, "reset": 20, "update_list": 20, "value_list": 20, "image_to_tensor": [20, 22], "image_fil": 20, "pil": 20, "scale": 20, "plot_imag": [20, 22], "n_row": 20, "dpi": 20, "400": 20, "savefig": 20, "titl": 20, "bcolor": [20, 22], "bold": 20, "x1b": 20, "1m": 20, "endc": 20, "0m": 20, "fail": 20, "91m": 20, "header": 20, "95m": 20, "okblu": 20, "94m": 20, "okcyan": 20, "96m": 20, "okgreen": 20, "92m": 20, "underlin": 20, "warn": 20, "93m": 20, "print_dict_highlight": [20, 22], "color": 20, "print_highlight": [20, 22], "print_respons": [20, 22], "print_warn": [20, 22], "unnorm": [20, 22], "std": 20, "set_multiple_indices_to_zero": [20, 22], "indic": 20, "tensor_hash": [20, 22], "yield_batch": [20, 22], "is_valid_url": [20, 22], "search": 21, "page": 21}, "objects": {"gaggle.arguments": [[1, 0, 0, "-", "config_args"], [1, 0, 0, "-", "ga_args"], [1, 0, 0, "-", "individual_args"], [1, 0, 0, "-", "outdir_args"], [1, 0, 0, "-", "problem_args"], [1, 0, 0, "-", "sys_args"]], "gaggle.arguments.config_args": [[1, 1, 1, "", "ConfigArgs"], [1, 4, 1, "", "parse_args"]], "gaggle.arguments.config_args.ConfigArgs": [[1, 2, 1, "", "args_to_config"], [1, 2, 1, "", "config_path"], [1, 3, 1, "", "exists"], [1, 3, 1, "", "get_args"], [1, 3, 1, "", "get_ga_args"], [1, 3, 1, "", "get_individual_args"], [1, 3, 1, "", "get_keys"], [1, 3, 1, "", "get_outdir_args"], [1, 3, 1, "", "get_problem_args"], [1, 3, 1, "", "get_sys_args"], [1, 3, 1, "", "update"]], "gaggle.arguments.ga_args": [[1, 1, 1, "", "GAArgs"]], "gaggle.arguments.ga_args.GAArgs": [[1, 2, 1, "", "CONFIG_KEY"], [1, 2, 1, "", "crossover"], [1, 2, 1, "", "elitism"], [1, 2, 1, "", "eval_every_generation"], [1, 2, 1, "", "ga_name"], [1, 2, 1, "", "generations"], [1, 2, 1, "", "k_point"], [1, 2, 1, "", "mutate_protected"], [1, 2, 1, "", "mutation"], [1, 2, 1, "", "mutation_chance"], [1, 2, 1, "", "mutation_std"], [1, 2, 1, "", "num_parents"], [1, 2, 1, "", "parent_survival_rate"], [1, 2, 1, "", "population_size"], [1, 2, 1, "", "save_best_every"], [1, 2, 1, "", "save_every_epoch"], [1, 2, 1, "", "selection"], [1, 2, 1, "", "selection_pressure"], [1, 2, 1, "", "tournament_size"], [1, 2, 1, "", "uniform_mutation_max_val"], [1, 2, 1, "", "uniform_mutation_min_val"], [1, 2, 1, "", "use_freshness"]], "gaggle.arguments.individual_args": [[1, 1, 1, "", "IndividualArgs"]], "gaggle.arguments.individual_args.IndividualArgs": [[1, 2, 1, "", "CONFIG_KEY"], [1, 2, 1, "", "base_model_weights"], [1, 3, 1, "", "get_base_model"], [1, 3, 1, "", "get_keys"], [1, 2, 1, "", "individual_name"], [1, 2, 1, "", "individual_size"], [1, 2, 1, "", "model_ckpt"], [1, 2, 1, "", "model_name"], [1, 2, 1, "", "models"], [1, 2, 1, "", "param_lower_bound"], [1, 2, 1, "", "param_upper_bound"], [1, 2, 1, "", "random_init"], [1, 2, 1, "", "resolution"], [1, 3, 1, "", "update"]], "gaggle.arguments.outdir_args": [[1, 1, 1, "", "OutdirArgs"]], "gaggle.arguments.outdir_args.OutdirArgs": [[1, 2, 1, "", "CONFIG_KEY"], [1, 3, 1, "", "create_folder_name"], [1, 3, 1, "", "exists"], [1, 2, 1, "", "folder_number"], [1, 3, 1, "", "get_folder_path"], [1, 2, 1, "", "name"], [1, 2, 1, "", "root"]], "gaggle.arguments.problem_args": [[1, 1, 1, "", "ProblemArgs"]], "gaggle.arguments.problem_args.ProblemArgs": [[1, 2, 1, "", "CONFIG_KEY"], [1, 2, 1, "", "batch_size"], [1, 2, 1, "", "dataset_root"], [1, 2, 1, "", "eval_batch_size"], [1, 2, 1, "", "gui"], [1, 2, 1, "", "max_size_train"], [1, 2, 1, "", "max_size_val"], [1, 2, 1, "", "problem_name"], [1, 2, 1, "", "runs"], [1, 2, 1, "", "seed"], [1, 2, 1, "", "steps"], [1, 2, 1, "", "stop_on_done"]], "gaggle.arguments.sys_args": [[1, 1, 1, "", "SysArgs"]], "gaggle.arguments.sys_args.SysArgs": [[1, 2, 1, "", "CONFIG_KEY"], [1, 2, 1, "", "device"], [1, 2, 1, "", "gpu_id"], [1, 2, 1, "", "num_workers"], [1, 3, 1, "", "set_gpu_id"], [1, 2, 1, "", "use_dataloader"], [1, 2, 1, "", "verbose"]], "gaggle.base_nns": [[2, 0, 0, "-", "dqn"], [2, 0, 0, "-", "drqn"], [2, 0, 0, "-", "lenet"], [2, 0, 0, "-", "resnet"], [2, 0, 0, "-", "resnet_x"], [2, 0, 0, "-", "snet"]], "gaggle.base_nns.dqn": [[2, 1, 1, "", "DQN"]], "gaggle.base_nns.dqn.DQN": [[2, 3, 1, "", "forward"]], "gaggle.base_nns.drqn": [[2, 1, 1, "", "DRQN"]], "gaggle.base_nns.drqn.DRQN": [[2, 3, 1, "", "forward"]], "gaggle.base_nns.lenet": [[2, 1, 1, "", "LeNet5"]], "gaggle.base_nns.lenet.LeNet5": [[2, 3, 1, "", "forward"]], "gaggle.base_nns.resnet": [[2, 4, 1, "", "ResNet101"], [2, 4, 1, "", "ResNet152"], [2, 4, 1, "", "ResNet18"], [2, 4, 1, "", "ResNet34"], [2, 4, 1, "", "ResNet50"]], "gaggle.base_nns.resnet_x": [[2, 1, 1, "", "ResNet"], [2, 4, 1, "", "resnet110"], [2, 4, 1, "", "resnet1202"], [2, 4, 1, "", "resnet20"], [2, 4, 1, "", "resnet32"], [2, 4, 1, "", "resnet44"], [2, 4, 1, "", "resnet56"]], "gaggle.base_nns.resnet_x.ResNet": [[2, 3, 1, "", "forward"]], "gaggle.base_nns.snet": [[2, 1, 1, "", "SNetCIFAR"], [2, 1, 1, "", "SNetMNIST"]], "gaggle.base_nns.snet.SNetCIFAR": [[2, 3, 1, "", "forward"]], "gaggle.base_nns.snet.SNetMNIST": [[2, 3, 1, "", "forward"]], "gaggle.ga": [[3, 0, 0, "-", "ga"], [3, 0, 0, "-", "ga_factory"], [3, 0, 0, "-", "simple_ga"]], "gaggle.ga.ga": [[3, 1, 1, "", "GA"]], "gaggle.ga.ga.GA": [[3, 3, 1, "", "train"]], "gaggle.ga.ga_factory": [[3, 1, 1, "", "GAFactory"]], "gaggle.ga.ga_factory.GAFactory": [[3, 3, 1, "", "from_ga_args"], [3, 2, 1, "", "gas"], [3, 3, 1, "", "update"]], "gaggle.ga.simple_ga": [[3, 1, 1, "", "SimpleGA"]], "gaggle.ga.simple_ga.SimpleGA": [[3, 3, 1, "", "display_metrics"], [3, 3, 1, "", "get_fitness_metric"], [3, 3, 1, "", "save_individual"], [3, 3, 1, "", "save_metrics"], [3, 3, 1, "", "test"], [3, 3, 1, "", "train"], [3, 3, 1, "", "train_one_generation"]], "gaggle.operators.crossover.base_crossovers": [[6, 0, 0, "-", "k_point_crossover"], [6, 0, 0, "-", "uniform_crossover"]], "gaggle.operators.crossover.base_crossovers.k_point_crossover": [[6, 1, 1, "", "KPointCrossover"]], "gaggle.operators.crossover.base_crossovers.k_point_crossover.KPointCrossover": [[6, 2, 1, "", "children_per_crossover"], [6, 3, 1, "", "crossover_individual"], [6, 3, 1, "", "deprecated_crossover_individual"], [6, 2, 1, "", "mates_per_crossover"]], "gaggle.operators.crossover.base_crossovers.uniform_crossover": [[6, 1, 1, "", "UniformCrossover"]], "gaggle.operators.crossover.base_crossovers.uniform_crossover.UniformCrossover": [[6, 2, 1, "", "children_per_crossover"], [6, 3, 1, "", "crossover_individual"], [6, 2, 1, "", "mates_per_crossover"]], "gaggle.operators.crossover": [[5, 0, 0, "-", "crossover"], [5, 0, 0, "-", "crossover_factory"]], "gaggle.operators.crossover.crossover": [[5, 1, 1, "", "Crossover"]], "gaggle.operators.crossover.crossover.Crossover": [[5, 2, 1, "", "children_per_crossover"], [5, 3, 1, "", "crossover_individual"], [5, 3, 1, "", "crossover_pop"], [5, 2, 1, "", "mates_per_crossover"]], "gaggle.operators.crossover.crossover_factory": [[5, 1, 1, "", "CrossoverFactory"]], "gaggle.operators.crossover.crossover_factory.CrossoverFactory": [[5, 2, 1, "", "crossovers"], [5, 3, 1, "", "from_ga_args"], [5, 3, 1, "", "get_keys"], [5, 3, 1, "", "update"]], "gaggle.operators.mutation.base_mutations": [[8, 0, 0, "-", "normal_mutation"], [8, 0, 0, "-", "uniform_mutation"]], "gaggle.operators.mutation.base_mutations.normal_mutation": [[8, 1, 1, "", "NormalMutation"]], "gaggle.operators.mutation.base_mutations.normal_mutation.NormalMutation": [[8, 3, 1, "", "mutate_individual"]], "gaggle.operators.mutation.base_mutations.uniform_mutation": [[8, 1, 1, "", "UniformMutation"]], "gaggle.operators.mutation.base_mutations.uniform_mutation.UniformMutation": [[8, 3, 1, "", "mutate_individual"]], "gaggle.operators.mutation": [[7, 0, 0, "-", "mutation"], [7, 0, 0, "-", "mutation_factory"]], "gaggle.operators.mutation.mutation": [[7, 1, 1, "", "Mutation"]], "gaggle.operators.mutation.mutation.Mutation": [[7, 3, 1, "", "mutate_individual"], [7, 3, 1, "", "mutate_pop"]], "gaggle.operators.mutation.mutation_factory": [[7, 1, 1, "", "MutationFactory"]], "gaggle.operators.mutation.mutation_factory.MutationFactory": [[7, 3, 1, "", "from_ga_args"], [7, 3, 1, "", "get_keys"], [7, 2, 1, "", "mutations"], [7, 3, 1, "", "update"]], "gaggle.operators.selection.base_selections": [[10, 0, 0, "-", "probabilistic_tournament_selection"], [10, 0, 0, "-", "relative_weighted_selection"], [10, 0, 0, "-", "simple_tournament_selection"], [10, 0, 0, "-", "truncation_selection"], [10, 0, 0, "-", "weighted_selection"]], "gaggle.operators.selection.base_selections.probabilistic_tournament_selection": [[10, 1, 1, "", "ProbabilisticTournamentSelection"], [10, 4, 1, "", "choice"]], "gaggle.operators.selection.base_selections.probabilistic_tournament_selection.ProbabilisticTournamentSelection": [[10, 3, 1, "", "select_parents"], [10, 3, 1, "", "tournament"]], "gaggle.operators.selection.base_selections.relative_weighted_selection": [[10, 1, 1, "", "RelativeWeightedSelection"], [10, 4, 1, "", "choice"]], "gaggle.operators.selection.base_selections.relative_weighted_selection.RelativeWeightedSelection": [[10, 3, 1, "", "select_parents"]], "gaggle.operators.selection.base_selections.simple_tournament_selection": [[10, 1, 1, "", "SimpleTournamentSelection"], [10, 4, 1, "", "choice"]], "gaggle.operators.selection.base_selections.simple_tournament_selection.SimpleTournamentSelection": [[10, 3, 1, "", "select_parents"], [10, 3, 1, "", "tournament"]], "gaggle.operators.selection.base_selections.truncation_selection": [[10, 1, 1, "", "TruncationSelection"]], "gaggle.operators.selection.base_selections.truncation_selection.TruncationSelection": [[10, 3, 1, "", "select_parents"]], "gaggle.operators.selection.base_selections.weighted_selection": [[10, 1, 1, "", "WeightedSelection"], [10, 4, 1, "", "choice"]], "gaggle.operators.selection.base_selections.weighted_selection.WeightedSelection": [[10, 3, 1, "", "select_parents"]], "gaggle.operators.selection": [[9, 0, 0, "-", "selection"], [9, 0, 0, "-", "selection_factory"]], "gaggle.operators.selection.selection": [[9, 1, 1, "", "Selection"]], "gaggle.operators.selection.selection.Selection": [[9, 3, 1, "", "select_all"], [9, 3, 1, "", "select_parents"], [9, 3, 1, "", "select_protected"]], "gaggle.operators.selection.selection_factory": [[9, 1, 1, "", "SelectionFactory"]], "gaggle.operators.selection.selection_factory.SelectionFactory": [[9, 3, 1, "", "from_ga_args"], [9, 3, 1, "", "get_keys"], [9, 2, 1, "", "selections"], [9, 3, 1, "", "update"]], "gaggle.population.base_individuals": [[12, 0, 0, "-", "nn_individual"], [12, 0, 0, "-", "numpy_individual"], [12, 0, 0, "-", "pytorch_individual"], [12, 0, 0, "-", "rl_individual"]], "gaggle.population.base_individuals.nn_individual": [[12, 1, 1, "", "NNIndividual"]], "gaggle.population.base_individuals.nn_individual.NNIndividual": [[12, 2, 1, "", "CONFIG_BASE_MODEL_STATE_DICT"], [12, 3, 1, "", "debug"], [12, 3, 1, "", "debug_tick"], [12, 3, 1, "", "eval"], [12, 3, 1, "", "first_time"], [12, 3, 1, "", "forward"], [12, 3, 1, "", "generate_gene_pool"], [12, 3, 1, "", "initialize"], [12, 3, 1, "", "load"], [12, 3, 1, "", "parameters"], [12, 3, 1, "", "save"], [12, 3, 1, "", "train"]], "gaggle.population.base_individuals.numpy_individual": [[12, 1, 1, "", "NumpyIndividual"]], "gaggle.population.base_individuals.numpy_individual.NumpyIndividual": [[12, 3, 1, "", "forward"], [12, 3, 1, "", "generate_gene_pool"], [12, 3, 1, "", "initialize"]], "gaggle.population.base_individuals.pytorch_individual": [[12, 1, 1, "", "PytorchIndividual"]], "gaggle.population.base_individuals.pytorch_individual.PytorchIndividual": [[12, 3, 1, "", "forward"], [12, 3, 1, "", "generate_gene_pool"], [12, 3, 1, "", "initialize"]], "gaggle.population.base_individuals.rl_individual": [[12, 1, 1, "", "RLIndividual"]], "gaggle.population.base_individuals.rl_individual.RLIndividual": [[12, 3, 1, "", "forward"]], "gaggle.population": [[11, 0, 0, "-", "individual"], [11, 0, 0, "-", "individual_factory"], [11, 0, 0, "-", "population_manager"]], "gaggle.population.individual": [[11, 1, 1, "", "Individual"]], "gaggle.population.individual.Individual": [[11, 2, 1, "", "CONFIG_GENE_POOL"], [11, 2, 1, "", "CONFIG_INDIVIDUAL_ARGS"], [11, 3, 1, "", "apply_bounds"], [11, 3, 1, "", "clip"], [11, 3, 1, "", "forward"], [11, 3, 1, "", "generate_gene_pool"], [11, 3, 1, "", "get_gene_pool"], [11, 3, 1, "", "get_genome_size"], [11, 3, 1, "", "initialize"], [11, 3, 1, "", "save"]], "gaggle.population.individual_factory": [[11, 1, 1, "", "IndividualFactory"]], "gaggle.population.individual_factory.IndividualFactory": [[11, 3, 1, "", "from_individual_args"], [11, 2, 1, "", "individuals"], [11, 3, 1, "", "update"]], "gaggle.population.population_manager": [[11, 1, 1, "", "PopulationManager"]], "gaggle.population.population_manager.PopulationManager": [[11, 3, 1, "", "apply_bounds"], [11, 3, 1, "", "create_buffer"], [11, 3, 1, "", "eval"], [11, 3, 1, "", "get_buffer"], [11, 3, 1, "", "get_fitness"], [11, 3, 1, "", "get_freshness"], [11, 3, 1, "", "get_gene_count"], [11, 3, 1, "", "get_individual"], [11, 3, 1, "", "get_individual_fitness"], [11, 3, 1, "", "get_mating_tuples"], [11, 3, 1, "", "get_num_protected"], [11, 3, 1, "", "get_parents"], [11, 3, 1, "", "get_population"], [11, 3, 1, "", "get_protected"], [11, 3, 1, "", "get_to_mutate"], [11, 3, 1, "", "is_fresh"], [11, 3, 1, "", "set_freshness"], [11, 3, 1, "", "set_individual_fitness"], [11, 3, 1, "", "train"], [11, 3, 1, "", "update_buffer"], [11, 3, 1, "", "update_mating_tuples"], [11, 3, 1, "", "update_parents"], [11, 3, 1, "", "update_population"], [11, 3, 1, "", "update_protected"], [11, 3, 1, "", "update_to_mutate"]], "gaggle.problem.base_problems": [[14, 0, 0, "-", "functional_problem"]], "gaggle.problem.base_problems.functional_problem": [[14, 1, 1, "", "FunctionalProblem"]], "gaggle.problem.base_problems.functional_problem.FunctionalProblem": [[14, 3, 1, "", "evaluate"]], "gaggle.problem.dataset.base_datasets": [[16, 0, 0, "-", "cifar10"], [16, 0, 0, "-", "mnist"]], "gaggle.problem.dataset.base_datasets.cifar10": [[16, 1, 1, "", "CIFAR10"]], "gaggle.problem.dataset.base_datasets.cifar10.CIFAR10": [[16, 3, 1, "", "get_data_and_targets"]], "gaggle.problem.dataset.base_datasets.mnist": [[16, 1, 1, "", "MNIST"]], "gaggle.problem.dataset.base_datasets.mnist.MNIST": [[16, 3, 1, "", "get_data_and_targets"]], "gaggle.problem.dataset": [[15, 0, 0, "-", "classification_problem"], [15, 0, 0, "-", "dataset"], [15, 0, 0, "-", "dataset_factory"]], "gaggle.problem.dataset.classification_problem": [[15, 1, 1, "", "ClassificationProblem"]], "gaggle.problem.dataset.classification_problem.ClassificationProblem": [[15, 3, 1, "", "evaluate"], [15, 3, 1, "", "evaluate_population"]], "gaggle.problem.dataset.dataset": [[15, 1, 1, "", "DataWrapper"], [15, 1, 1, "", "Dataset"]], "gaggle.problem.dataset.dataset.Dataset": [[15, 3, 1, "", "copy"], [15, 3, 1, "", "enable_normalization"], [15, 3, 1, "", "get_data_and_targets"], [15, 3, 1, "", "get_data_and_transform"], [15, 3, 1, "", "num_classes"], [15, 3, 1, "", "print_class_distribution"], [15, 3, 1, "", "random_subset"], [15, 3, 1, "", "remove_classes"], [15, 3, 1, "", "size"], [15, 3, 1, "", "subset"], [15, 3, 1, "", "visualize"], [15, 3, 1, "", "without_normalization"]], "gaggle.problem.dataset.dataset_factory": [[15, 1, 1, "", "DatasetFactory"]], "gaggle.problem.dataset.dataset_factory.DatasetFactory": [[15, 2, 1, "", "datasets"], [15, 3, 1, "", "from_data"], [15, 3, 1, "", "from_problem_args"], [15, 3, 1, "", "get_keys"], [15, 3, 1, "", "update"]], "gaggle.problem.environment": [[17, 0, 0, "-", "environment_factory"], [17, 0, 0, "-", "rl_problem"]], "gaggle.problem.environment.environment_factory": [[17, 1, 1, "", "EnvironmentFactory"], [17, 1, 1, "", "GymWrapper"]], "gaggle.problem.environment.environment_factory.EnvironmentFactory": [[17, 2, 1, "", "environments"], [17, 3, 1, "", "from_gym_env_id"], [17, 3, 1, "", "from_problem_args"], [17, 3, 1, "", "get_keys"], [17, 3, 1, "", "update"]], "gaggle.problem.environment.rl_problem": [[17, 1, 1, "", "RLProblem"]], "gaggle.problem.environment.rl_problem.RLProblem": [[17, 3, 1, "", "evaluate"]], "gaggle.problem.leap": [[18, 0, 0, "-", "leap_problem"]], "gaggle.problem.leap.leap_problem": [[18, 1, 1, "", "LeapProblem"], [18, 1, 1, "", "RegistrableLeapProblem"], [18, 4, 1, "", "convert_leap_problem"]], "gaggle.problem.leap.leap_problem.LeapProblem": [[18, 3, 1, "", "evaluate"]], "gaggle.problem": [[13, 0, 0, "-", "problem"], [13, 0, 0, "-", "problem_factory"]], "gaggle.problem.problem": [[13, 1, 1, "", "Problem"]], "gaggle.problem.problem.Problem": [[13, 3, 1, "", "evaluate"], [13, 3, 1, "", "evaluate_population"]], "gaggle.problem.problem_factory": [[13, 1, 1, "", "ProblemFactory"]], "gaggle.problem.problem_factory.ProblemFactory": [[13, 3, 1, "", "convert_and_register_leap_problem"], [13, 3, 1, "", "from_problem_args"], [13, 2, 1, "", "problems"], [13, 3, 1, "", "register_problem"], [13, 2, 1, "", "registrable_problems"]], "gaggle.supervisor": [[19, 0, 0, "-", "ga_supervisor"]], "gaggle.supervisor.ga_supervisor": [[19, 1, 1, "", "GASupervisor"]], "gaggle.supervisor.ga_supervisor.GASupervisor": [[19, 3, 1, "", "run"], [19, 3, 1, "", "set_custom_fitness"]], "gaggle.utils": [[20, 0, 0, "-", "individual_helper"], [20, 0, 0, "-", "metrics"], [20, 0, 0, "-", "numpy_helper"], [20, 0, 0, "-", "smooth_value"], [20, 0, 0, "-", "special_images"], [20, 0, 0, "-", "special_print"], [20, 0, 0, "-", "torch_helper"], [20, 0, 0, "-", "web"]], "gaggle.utils.individual_helper": [[20, 4, 1, "", "from_gene_pool"], [20, 4, 1, "", "from_gene_pool_no_metadata"], [20, 4, 1, "", "from_tensor"]], "gaggle.utils.metrics": [[20, 4, 1, "", "accuracy"]], "gaggle.utils.numpy_helper": [[20, 4, 1, "", "tmp_seed"]], "gaggle.utils.smooth_value": [[20, 1, 1, "", "SmoothedValue"]], "gaggle.utils.smooth_value.SmoothedValue": [[20, 5, 1, "", "avg"], [20, 5, 1, "", "global_avg"], [20, 5, 1, "", "max"], [20, 5, 1, "", "median"], [20, 5, 1, "", "min"], [20, 3, 1, "", "reset"], [20, 3, 1, "", "update"], [20, 3, 1, "", "update_list"], [20, 5, 1, "", "value"]], "gaggle.utils.special_images": [[20, 4, 1, "", "image_to_tensor"], [20, 4, 1, "", "plot_images"]], "gaggle.utils.special_print": [[20, 1, 1, "", "bcolors"], [20, 4, 1, "", "print_dict_highlighted"], [20, 4, 1, "", "print_highlighted"], [20, 4, 1, "", "print_response"], [20, 4, 1, "", "print_warning"]], "gaggle.utils.special_print.bcolors": [[20, 2, 1, "", "BOLD"], [20, 2, 1, "", "ENDC"], [20, 2, 1, "", "FAIL"], [20, 2, 1, "", "HEADER"], [20, 2, 1, "", "OKBLUE"], [20, 2, 1, "", "OKCYAN"], [20, 2, 1, "", "OKGREEN"], [20, 2, 1, "", "UNDERLINE"], [20, 2, 1, "", "WARNING"]], "gaggle.utils.torch_helper": [[20, 1, 1, "", "UnNormalize"], [20, 4, 1, "", "set_multiple_indices_to_zero"], [20, 4, 1, "", "tensor_hash"], [20, 4, 1, "", "yield_batches"]], "gaggle.utils.web": [[20, 4, 1, "", "is_valid_url"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:function", "5": "py:property"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"]}, "titleterms": {"gaggl": [0, 21, 22], "argument": 1, "config_arg": 1, "ga_arg": 1, "individual_arg": 1, "outdir_arg": 1, "problem_arg": 1, "sys_arg": 1, "base_nn": 2, "dqn": 2, "drqn": 2, "lenet": 2, "resnet": 2, "resnet_x": 2, "snet": 2, "ga": 3, "ga_factori": 3, "simple_ga": 3, "oper": 4, "crossov": 5, "crossover_factori": 5, "modul": 5, "base_crossov": 6, "k_point_crossov": 6, "uniform_crossov": 6, "mutat": 7, "mutation_factori": 7, "base_mut": 8, "normal_mut": 8, "uniform": 8, "select": 9, "selection_factori": 9, "base_select": 10, "probabilistic_tournament_select": 10, "relative_weighted_select": 10, "simple_tournament_select": 10, "truncation_select": 10, "weighted_select": 10, "popul": 11, "individu": 11, "individual_factori": 11, "population_manag": 11, "base_individu": 12, "nn_individu": 12, "numpy_individu": 12, "pytorch_individu": 12, "rl_individu": 12, "problem": 13, "problem_factori": 13, "base_problem": 14, "functional_problem": 14, "dataset": 15, "classification_problem": 15, "dataset_factori": 15, "base_dataset": 16, "cifar10": 16, "mnist": 16, "environ": 17, "environment_factori": 17, "rl_problem": 17, "leap": 18, "leap_problem": 18, "supervisor": 19, "ga_supervisor": 19, "util": 20, "individual_help": 20, "metric": 20, "numpy_help": 20, "smooth_valu": 20, "special_imag": 20, "special_print": 20, "print": 20, "highlight": 20, "messag": 20, "separ": 20, "dash": 20, "content": [20, 21], "torch_help": 20, "web": 20, "welcom": 21, "": 21, "document": 21, "indic": 21, "tabl": 21}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Gaggle": [[0, "gaggle"]], "Arguments": [[1, "arguments"]], "Config_args": [[1, "module-gaggle.arguments.config_args"]], "Ga_args": [[1, "module-gaggle.arguments.ga_args"]], "Individual_args": [[1, "module-gaggle.arguments.individual_args"]], "Outdir_args": [[1, "module-gaggle.arguments.outdir_args"]], "Problem_args": [[1, "module-gaggle.arguments.problem_args"]], "Sys_args": [[1, "module-gaggle.arguments.sys_args"]], "Base_nns": [[2, "base-nns"]], "Dqn": [[2, "module-gaggle.base_nns.dqn"]], "Drqn": [[2, "module-gaggle.base_nns.drqn"]], "Lenet": [[2, "module-gaggle.base_nns.lenet"]], "Resnet": [[2, "module-gaggle.base_nns.resnet"]], "Resnet_x": [[2, "module-gaggle.base_nns.resnet_x"]], "Snet": [[2, "module-gaggle.base_nns.snet"]], "Ga": [[3, "ga"], [3, "id1"]], "Ga_factory": [[3, "module-gaggle.ga.ga_factory"]], "Simple_ga": [[3, "module-gaggle.ga.simple_ga"]], "Operators": [[4, "operators"]], "Crossover": [[5, "crossover"], [5, "id1"]], "Crossover_factory module": [[5, "module-gaggle.operators.crossover.crossover_factory"]], "Base_crossovers": [[6, "base-crossovers"]], "K_point_crossover": [[6, "module-gaggle.operators.crossover.base_crossovers.k_point_crossover"]], "Uniform_crossover": [[6, "module-gaggle.operators.crossover.base_crossovers.uniform_crossover"]], "Mutation": [[7, "mutation"], [7, "id1"]], "Mutation_factory": [[7, "module-gaggle.operators.mutation.mutation_factory"]], "Base_mutations": [[8, "base-mutations"]], "Normal_mutation": [[8, "module-gaggle.operators.mutation.base_mutations.normal_mutation"]], "Base_mutations.uniform": [[8, "module-gaggle.operators.mutation.base_mutations.uniform_mutation"]], "Selection": [[9, "selection"], [9, "id1"]], "Selection_factory": [[9, "module-gaggle.operators.selection.selection_factory"]], "Base_selections": [[10, "base-selections"]], "Probabilistic_tournament_selection": [[10, "module-gaggle.operators.selection.base_selections.probabilistic_tournament_selection"]], "Relative_weighted_selection": [[10, "module-gaggle.operators.selection.base_selections.relative_weighted_selection"]], "Simple_tournament_selection": [[10, "module-gaggle.operators.selection.base_selections.simple_tournament_selection"]], "Truncation_selection": [[10, "module-gaggle.operators.selection.base_selections.truncation_selection"]], "Weighted_selection": [[10, "module-gaggle.operators.selection.base_selections.weighted_selection"]], "Population": [[11, "population"]], "Individual": [[11, "module-gaggle.population.individual"]], "Individual_factory": [[11, "module-gaggle.population.individual_factory"]], "Population_manager": [[11, "module-gaggle.population.population_manager"]], "Base_individuals": [[12, "base-individuals"]], "Nn_individual": [[12, "module-gaggle.population.base_individuals.nn_individual"]], "Numpy_individual": [[12, "module-gaggle.population.base_individuals.numpy_individual"]], "Pytorch_individual": [[12, "module-gaggle.population.base_individuals.pytorch_individual"]], "Rl_individual": [[12, "module-gaggle.population.base_individuals.rl_individual"]], "Problem": [[13, "problem"], [13, "id1"]], "Problem_factory": [[13, "module-gaggle.problem.problem_factory"]], "Base_problems": [[14, "base-problems"]], "Functional_problem": [[14, "module-gaggle.problem.base_problems.functional_problem"]], "Dataset": [[15, "dataset"], [15, "id1"]], "Classification_problem": [[15, "module-gaggle.problem.dataset.classification_problem"]], "Dataset_factory": [[15, "module-gaggle.problem.dataset.dataset_factory"]], "Base_datasets": [[16, "base-datasets"]], "CIFAR10": [[16, "module-gaggle.problem.dataset.base_datasets.cifar10"]], "MNIST": [[16, "module-gaggle.problem.dataset.base_datasets.mnist"]], "Environment": [[17, "environment"]], "Environment_factory": [[17, "module-gaggle.problem.environment.environment_factory"]], "Rl_problem": [[17, "module-gaggle.problem.environment.rl_problem"]], "Leap": [[18, "leap"]], "Leap_problem": [[18, "module-gaggle.problem.leap.leap_problem"]], "Supervisor": [[19, "supervisor"]], "Ga_supervisor": [[19, "module-gaggle.supervisor.ga_supervisor"]], "Utils": [[20, "utils"]], "Individual_helper": [[20, "module-gaggle.utils.individual_helper"]], "Metrics": [[20, "module-gaggle.utils.metrics"]], "Numpy_helper": [[20, "module-gaggle.utils.numpy_helper"]], "Smooth_value": [[20, "module-gaggle.utils.smooth_value"]], "Special_images": [[20, "module-gaggle.utils.special_images"]], "Special_print": [[20, "module-gaggle.utils.special_print"]], "Prints a highlighted message separated by dashes": [[20, "prints-a-highlighted-message-separated-by-dashes"], [20, "id1"]], "content": [[20, "content"], [20, "id2"]], "Torch_helper": [[20, "module-gaggle.utils.torch_helper"]], "Web": [[20, "module-gaggle.utils.web"]], "Welcome to gaggle\u2019s documentation!": [[21, "welcome-to-gaggle-s-documentation"]], "Contents:": [[21, null]], "Indices and tables": [[21, "indices-and-tables"]], "gaggle": [[22, "gaggle"]]}, "indexentries": {"config_key (gaggle.arguments.ga_args.gaargs attribute)": [[1, "gaggle.arguments.ga_args.GAArgs.CONFIG_KEY"]], "config_key (gaggle.arguments.individual_args.individualargs attribute)": [[1, "gaggle.arguments.individual_args.IndividualArgs.CONFIG_KEY"]], "config_key (gaggle.arguments.outdir_args.outdirargs attribute)": [[1, "gaggle.arguments.outdir_args.OutdirArgs.CONFIG_KEY"]], "config_key (gaggle.arguments.problem_args.problemargs attribute)": [[1, "gaggle.arguments.problem_args.ProblemArgs.CONFIG_KEY"]], "config_key (gaggle.arguments.sys_args.sysargs attribute)": [[1, "gaggle.arguments.sys_args.SysArgs.CONFIG_KEY"]], "configargs (class in gaggle.arguments.config_args)": [[1, "gaggle.arguments.config_args.ConfigArgs"]], "gaargs (class in gaggle.arguments.ga_args)": [[1, "gaggle.arguments.ga_args.GAArgs"]], "individualargs (class in gaggle.arguments.individual_args)": [[1, "gaggle.arguments.individual_args.IndividualArgs"]], "outdirargs (class in gaggle.arguments.outdir_args)": [[1, "gaggle.arguments.outdir_args.OutdirArgs"]], "problemargs (class in gaggle.arguments.problem_args)": [[1, "gaggle.arguments.problem_args.ProblemArgs"]], "sysargs (class in gaggle.arguments.sys_args)": [[1, "gaggle.arguments.sys_args.SysArgs"]], "args_to_config (gaggle.arguments.config_args.configargs attribute)": [[1, "gaggle.arguments.config_args.ConfigArgs.args_to_config"]], "base_model_weights (gaggle.arguments.individual_args.individualargs attribute)": [[1, "gaggle.arguments.individual_args.IndividualArgs.base_model_weights"]], "batch_size (gaggle.arguments.problem_args.problemargs attribute)": [[1, "gaggle.arguments.problem_args.ProblemArgs.batch_size"]], "config_path (gaggle.arguments.config_args.configargs attribute)": [[1, "gaggle.arguments.config_args.ConfigArgs.config_path"]], "create_folder_name() (gaggle.arguments.outdir_args.outdirargs method)": [[1, "gaggle.arguments.outdir_args.OutdirArgs.create_folder_name"]], "crossover (gaggle.arguments.ga_args.gaargs attribute)": [[1, "gaggle.arguments.ga_args.GAArgs.crossover"]], "dataset_root (gaggle.arguments.problem_args.problemargs attribute)": [[1, "gaggle.arguments.problem_args.ProblemArgs.dataset_root"]], "device (gaggle.arguments.sys_args.sysargs attribute)": [[1, "gaggle.arguments.sys_args.SysArgs.device"]], "elitism (gaggle.arguments.ga_args.gaargs attribute)": [[1, "gaggle.arguments.ga_args.GAArgs.elitism"]], "eval_batch_size (gaggle.arguments.problem_args.problemargs attribute)": [[1, "gaggle.arguments.problem_args.ProblemArgs.eval_batch_size"]], "eval_every_generation (gaggle.arguments.ga_args.gaargs attribute)": [[1, "gaggle.arguments.ga_args.GAArgs.eval_every_generation"]], "exists() (gaggle.arguments.config_args.configargs method)": [[1, "gaggle.arguments.config_args.ConfigArgs.exists"]], "exists() (gaggle.arguments.outdir_args.outdirargs method)": [[1, "gaggle.arguments.outdir_args.OutdirArgs.exists"]], "folder_number (gaggle.arguments.outdir_args.outdirargs attribute)": [[1, "gaggle.arguments.outdir_args.OutdirArgs.folder_number"]], "ga_name (gaggle.arguments.ga_args.gaargs attribute)": [[1, "gaggle.arguments.ga_args.GAArgs.ga_name"]], "gaggle.arguments.config_args": [[1, "module-gaggle.arguments.config_args"]], "gaggle.arguments.ga_args": [[1, "module-gaggle.arguments.ga_args"]], "gaggle.arguments.individual_args": [[1, "module-gaggle.arguments.individual_args"]], "gaggle.arguments.outdir_args": [[1, "module-gaggle.arguments.outdir_args"]], "gaggle.arguments.problem_args": [[1, "module-gaggle.arguments.problem_args"]], "gaggle.arguments.sys_args": [[1, "module-gaggle.arguments.sys_args"]], "generations (gaggle.arguments.ga_args.gaargs attribute)": [[1, "gaggle.arguments.ga_args.GAArgs.generations"]], "get_args() (gaggle.arguments.config_args.configargs method)": [[1, "gaggle.arguments.config_args.ConfigArgs.get_args"]], "get_base_model() (gaggle.arguments.individual_args.individualargs method)": [[1, "gaggle.arguments.individual_args.IndividualArgs.get_base_model"]], "get_folder_path() (gaggle.arguments.outdir_args.outdirargs method)": [[1, "gaggle.arguments.outdir_args.OutdirArgs.get_folder_path"]], "get_ga_args() (gaggle.arguments.config_args.configargs method)": [[1, "gaggle.arguments.config_args.ConfigArgs.get_ga_args"]], "get_individual_args() (gaggle.arguments.config_args.configargs method)": [[1, "gaggle.arguments.config_args.ConfigArgs.get_individual_args"]], "get_keys() (gaggle.arguments.config_args.configargs class method)": [[1, "gaggle.arguments.config_args.ConfigArgs.get_keys"]], "get_keys() (gaggle.arguments.individual_args.individualargs class method)": [[1, "gaggle.arguments.individual_args.IndividualArgs.get_keys"]], "get_outdir_args() (gaggle.arguments.config_args.configargs method)": [[1, "gaggle.arguments.config_args.ConfigArgs.get_outdir_args"]], "get_problem_args() (gaggle.arguments.config_args.configargs method)": [[1, "gaggle.arguments.config_args.ConfigArgs.get_problem_args"]], "get_sys_args() (gaggle.arguments.config_args.configargs method)": [[1, "gaggle.arguments.config_args.ConfigArgs.get_sys_args"]], "gpu_id (gaggle.arguments.sys_args.sysargs attribute)": [[1, "gaggle.arguments.sys_args.SysArgs.gpu_id"]], "gui (gaggle.arguments.problem_args.problemargs attribute)": [[1, "gaggle.arguments.problem_args.ProblemArgs.gui"]], "individual_name (gaggle.arguments.individual_args.individualargs attribute)": [[1, "gaggle.arguments.individual_args.IndividualArgs.individual_name"]], "individual_size (gaggle.arguments.individual_args.individualargs attribute)": [[1, "gaggle.arguments.individual_args.IndividualArgs.individual_size"]], "k_point (gaggle.arguments.ga_args.gaargs attribute)": [[1, "gaggle.arguments.ga_args.GAArgs.k_point"]], "max_size_train (gaggle.arguments.problem_args.problemargs attribute)": [[1, "gaggle.arguments.problem_args.ProblemArgs.max_size_train"]], "max_size_val (gaggle.arguments.problem_args.problemargs attribute)": [[1, "gaggle.arguments.problem_args.ProblemArgs.max_size_val"]], "model_ckpt (gaggle.arguments.individual_args.individualargs attribute)": [[1, "gaggle.arguments.individual_args.IndividualArgs.model_ckpt"]], "model_name (gaggle.arguments.individual_args.individualargs attribute)": [[1, "gaggle.arguments.individual_args.IndividualArgs.model_name"]], "models (gaggle.arguments.individual_args.individualargs attribute)": [[1, "gaggle.arguments.individual_args.IndividualArgs.models"]], "module": [[1, "module-gaggle.arguments.config_args"], [1, "module-gaggle.arguments.ga_args"], [1, "module-gaggle.arguments.individual_args"], [1, "module-gaggle.arguments.outdir_args"], [1, "module-gaggle.arguments.problem_args"], [1, "module-gaggle.arguments.sys_args"], [2, "module-gaggle.base_nns.dqn"], [2, "module-gaggle.base_nns.drqn"], [2, "module-gaggle.base_nns.lenet"], [2, "module-gaggle.base_nns.resnet"], [2, "module-gaggle.base_nns.resnet_x"], [2, "module-gaggle.base_nns.snet"], [3, "module-gaggle.ga.ga"], [3, "module-gaggle.ga.ga_factory"], [3, "module-gaggle.ga.simple_ga"], [5, "module-gaggle.operators.crossover.crossover"], [5, "module-gaggle.operators.crossover.crossover_factory"], [6, "module-gaggle.operators.crossover.base_crossovers.k_point_crossover"], [6, "module-gaggle.operators.crossover.base_crossovers.uniform_crossover"], [7, "module-gaggle.operators.mutation.mutation"], [7, "module-gaggle.operators.mutation.mutation_factory"], [8, "module-gaggle.operators.mutation.base_mutations.normal_mutation"], [8, "module-gaggle.operators.mutation.base_mutations.uniform_mutation"], [9, "module-gaggle.operators.selection.selection"], [9, "module-gaggle.operators.selection.selection_factory"], [10, "module-gaggle.operators.selection.base_selections.probabilistic_tournament_selection"], [10, "module-gaggle.operators.selection.base_selections.relative_weighted_selection"], [10, "module-gaggle.operators.selection.base_selections.simple_tournament_selection"], [10, "module-gaggle.operators.selection.base_selections.truncation_selection"], [10, "module-gaggle.operators.selection.base_selections.weighted_selection"], [11, "module-gaggle.population.individual"], [11, "module-gaggle.population.individual_factory"], [11, "module-gaggle.population.population_manager"], [12, "module-gaggle.population.base_individuals.nn_individual"], [12, "module-gaggle.population.base_individuals.numpy_individual"], [12, "module-gaggle.population.base_individuals.pytorch_individual"], [12, "module-gaggle.population.base_individuals.rl_individual"], [13, "module-gaggle.problem.problem"], [13, "module-gaggle.problem.problem_factory"], [14, "module-gaggle.problem.base_problems.functional_problem"], [15, "module-gaggle.problem.dataset.classification_problem"], [15, "module-gaggle.problem.dataset.dataset"], [15, "module-gaggle.problem.dataset.dataset_factory"], [16, "module-gaggle.problem.dataset.base_datasets.cifar10"], [16, "module-gaggle.problem.dataset.base_datasets.mnist"], [17, "module-gaggle.problem.environment.environment_factory"], [17, "module-gaggle.problem.environment.rl_problem"], [18, "module-gaggle.problem.leap.leap_problem"], [19, "module-gaggle.supervisor.ga_supervisor"], [20, "module-gaggle.utils.individual_helper"], [20, "module-gaggle.utils.metrics"], [20, "module-gaggle.utils.numpy_helper"], [20, "module-gaggle.utils.smooth_value"], [20, "module-gaggle.utils.special_images"], [20, "module-gaggle.utils.special_print"], [20, "module-gaggle.utils.torch_helper"], [20, "module-gaggle.utils.web"]], "mutate_protected (gaggle.arguments.ga_args.gaargs attribute)": [[1, "gaggle.arguments.ga_args.GAArgs.mutate_protected"]], "mutation (gaggle.arguments.ga_args.gaargs attribute)": [[1, "gaggle.arguments.ga_args.GAArgs.mutation"]], "mutation_chance (gaggle.arguments.ga_args.gaargs attribute)": [[1, "gaggle.arguments.ga_args.GAArgs.mutation_chance"]], "mutation_std (gaggle.arguments.ga_args.gaargs attribute)": [[1, "gaggle.arguments.ga_args.GAArgs.mutation_std"]], "name (gaggle.arguments.outdir_args.outdirargs attribute)": [[1, "gaggle.arguments.outdir_args.OutdirArgs.name"]], "num_parents (gaggle.arguments.ga_args.gaargs attribute)": [[1, "gaggle.arguments.ga_args.GAArgs.num_parents"]], "num_workers (gaggle.arguments.sys_args.sysargs attribute)": [[1, "gaggle.arguments.sys_args.SysArgs.num_workers"]], "param_lower_bound (gaggle.arguments.individual_args.individualargs attribute)": [[1, "gaggle.arguments.individual_args.IndividualArgs.param_lower_bound"]], "param_upper_bound (gaggle.arguments.individual_args.individualargs attribute)": [[1, "gaggle.arguments.individual_args.IndividualArgs.param_upper_bound"]], "parent_survival_rate (gaggle.arguments.ga_args.gaargs attribute)": [[1, "gaggle.arguments.ga_args.GAArgs.parent_survival_rate"]], "parse_args() (in module gaggle.arguments.config_args)": [[1, "gaggle.arguments.config_args.parse_args"]], "population_size (gaggle.arguments.ga_args.gaargs attribute)": [[1, "gaggle.arguments.ga_args.GAArgs.population_size"]], "problem_name (gaggle.arguments.problem_args.problemargs attribute)": [[1, "gaggle.arguments.problem_args.ProblemArgs.problem_name"]], "random_init (gaggle.arguments.individual_args.individualargs attribute)": [[1, "gaggle.arguments.individual_args.IndividualArgs.random_init"]], "resolution (gaggle.arguments.individual_args.individualargs attribute)": [[1, "gaggle.arguments.individual_args.IndividualArgs.resolution"]], "root (gaggle.arguments.outdir_args.outdirargs attribute)": [[1, "gaggle.arguments.outdir_args.OutdirArgs.root"]], "runs (gaggle.arguments.problem_args.problemargs attribute)": [[1, "gaggle.arguments.problem_args.ProblemArgs.runs"]], "save_best_every (gaggle.arguments.ga_args.gaargs attribute)": [[1, "gaggle.arguments.ga_args.GAArgs.save_best_every"]], "save_every_epoch (gaggle.arguments.ga_args.gaargs attribute)": [[1, "gaggle.arguments.ga_args.GAArgs.save_every_epoch"]], "seed (gaggle.arguments.problem_args.problemargs attribute)": [[1, "gaggle.arguments.problem_args.ProblemArgs.seed"]], "selection (gaggle.arguments.ga_args.gaargs attribute)": [[1, "gaggle.arguments.ga_args.GAArgs.selection"]], "selection_pressure (gaggle.arguments.ga_args.gaargs attribute)": [[1, "gaggle.arguments.ga_args.GAArgs.selection_pressure"]], "set_gpu_id() (gaggle.arguments.sys_args.sysargs method)": [[1, "gaggle.arguments.sys_args.SysArgs.set_gpu_id"]], "steps (gaggle.arguments.problem_args.problemargs attribute)": [[1, "gaggle.arguments.problem_args.ProblemArgs.steps"]], "stop_on_done (gaggle.arguments.problem_args.problemargs attribute)": [[1, "gaggle.arguments.problem_args.ProblemArgs.stop_on_done"]], "tournament_size (gaggle.arguments.ga_args.gaargs attribute)": [[1, "gaggle.arguments.ga_args.GAArgs.tournament_size"]], "uniform_mutation_max_val (gaggle.arguments.ga_args.gaargs attribute)": [[1, "gaggle.arguments.ga_args.GAArgs.uniform_mutation_max_val"]], "uniform_mutation_min_val (gaggle.arguments.ga_args.gaargs attribute)": [[1, "gaggle.arguments.ga_args.GAArgs.uniform_mutation_min_val"]], "update() (gaggle.arguments.config_args.configargs class method)": [[1, "gaggle.arguments.config_args.ConfigArgs.update"]], "update() (gaggle.arguments.individual_args.individualargs class method)": [[1, "gaggle.arguments.individual_args.IndividualArgs.update"]], "use_dataloader (gaggle.arguments.sys_args.sysargs attribute)": [[1, "gaggle.arguments.sys_args.SysArgs.use_dataloader"]], "use_freshness (gaggle.arguments.ga_args.gaargs attribute)": [[1, "gaggle.arguments.ga_args.GAArgs.use_freshness"]], "verbose (gaggle.arguments.sys_args.sysargs attribute)": [[1, "gaggle.arguments.sys_args.SysArgs.verbose"]], "dqn (class in gaggle.base_nns.dqn)": [[2, "gaggle.base_nns.dqn.DQN"]], "drqn (class in gaggle.base_nns.drqn)": [[2, "gaggle.base_nns.drqn.DRQN"]], "lenet5 (class in gaggle.base_nns.lenet)": [[2, "gaggle.base_nns.lenet.LeNet5"]], "resnet (class in gaggle.base_nns.resnet_x)": [[2, "gaggle.base_nns.resnet_x.ResNet"]], "resnet101() (in module gaggle.base_nns.resnet)": [[2, "gaggle.base_nns.resnet.ResNet101"]], "resnet152() (in module gaggle.base_nns.resnet)": [[2, "gaggle.base_nns.resnet.ResNet152"]], "resnet18() (in module gaggle.base_nns.resnet)": [[2, "gaggle.base_nns.resnet.ResNet18"]], "resnet34() (in module gaggle.base_nns.resnet)": [[2, "gaggle.base_nns.resnet.ResNet34"]], "resnet50() (in module gaggle.base_nns.resnet)": [[2, "gaggle.base_nns.resnet.ResNet50"]], "snetcifar (class in gaggle.base_nns.snet)": [[2, "gaggle.base_nns.snet.SNetCIFAR"]], "snetmnist (class in gaggle.base_nns.snet)": [[2, "gaggle.base_nns.snet.SNetMNIST"]], "forward() (gaggle.base_nns.dqn.dqn method)": [[2, "gaggle.base_nns.dqn.DQN.forward"]], "forward() (gaggle.base_nns.drqn.drqn method)": [[2, "gaggle.base_nns.drqn.DRQN.forward"]], "forward() (gaggle.base_nns.lenet.lenet5 method)": [[2, "gaggle.base_nns.lenet.LeNet5.forward"]], "forward() (gaggle.base_nns.resnet_x.resnet method)": [[2, "gaggle.base_nns.resnet_x.ResNet.forward"]], "forward() (gaggle.base_nns.snet.snetcifar method)": [[2, "gaggle.base_nns.snet.SNetCIFAR.forward"]], "forward() (gaggle.base_nns.snet.snetmnist method)": [[2, "gaggle.base_nns.snet.SNetMNIST.forward"]], "gaggle.base_nns.dqn": [[2, "module-gaggle.base_nns.dqn"]], "gaggle.base_nns.drqn": [[2, "module-gaggle.base_nns.drqn"]], "gaggle.base_nns.lenet": [[2, "module-gaggle.base_nns.lenet"]], "gaggle.base_nns.resnet": [[2, "module-gaggle.base_nns.resnet"]], "gaggle.base_nns.resnet_x": [[2, "module-gaggle.base_nns.resnet_x"]], "gaggle.base_nns.snet": [[2, "module-gaggle.base_nns.snet"]], "resnet110() (in module gaggle.base_nns.resnet_x)": [[2, "gaggle.base_nns.resnet_x.resnet110"]], "resnet1202() (in module gaggle.base_nns.resnet_x)": [[2, "gaggle.base_nns.resnet_x.resnet1202"]], "resnet20() (in module gaggle.base_nns.resnet_x)": [[2, "gaggle.base_nns.resnet_x.resnet20"]], "resnet32() (in module gaggle.base_nns.resnet_x)": [[2, "gaggle.base_nns.resnet_x.resnet32"]], "resnet44() (in module gaggle.base_nns.resnet_x)": [[2, "gaggle.base_nns.resnet_x.resnet44"]], "resnet56() (in module gaggle.base_nns.resnet_x)": [[2, "gaggle.base_nns.resnet_x.resnet56"]], "ga (class in gaggle.ga.ga)": [[3, "gaggle.ga.ga.GA"]], "gafactory (class in gaggle.ga.ga_factory)": [[3, "gaggle.ga.ga_factory.GAFactory"]], "simplega (class in gaggle.ga.simple_ga)": [[3, "gaggle.ga.simple_ga.SimpleGA"]], "display_metrics() (gaggle.ga.simple_ga.simplega method)": [[3, "gaggle.ga.simple_ga.SimpleGA.display_metrics"]], "from_ga_args() (gaggle.ga.ga_factory.gafactory class method)": [[3, "gaggle.ga.ga_factory.GAFactory.from_ga_args"]], "gaggle.ga.ga": [[3, "module-gaggle.ga.ga"]], "gaggle.ga.ga_factory": [[3, "module-gaggle.ga.ga_factory"]], "gaggle.ga.simple_ga": [[3, "module-gaggle.ga.simple_ga"]], "gas (gaggle.ga.ga_factory.gafactory attribute)": [[3, "gaggle.ga.ga_factory.GAFactory.gas"]], "get_fitness_metric() (gaggle.ga.simple_ga.simplega method)": [[3, "gaggle.ga.simple_ga.SimpleGA.get_fitness_metric"]], "save_individual() (gaggle.ga.simple_ga.simplega method)": [[3, "gaggle.ga.simple_ga.SimpleGA.save_individual"]], "save_metrics() (gaggle.ga.simple_ga.simplega method)": [[3, "gaggle.ga.simple_ga.SimpleGA.save_metrics"]], "test() (gaggle.ga.simple_ga.simplega method)": [[3, "gaggle.ga.simple_ga.SimpleGA.test"]], "train() (gaggle.ga.ga.ga method)": [[3, "gaggle.ga.ga.GA.train"]], "train() (gaggle.ga.simple_ga.simplega method)": [[3, "gaggle.ga.simple_ga.SimpleGA.train"]], "train_one_generation() (gaggle.ga.simple_ga.simplega method)": [[3, "gaggle.ga.simple_ga.SimpleGA.train_one_generation"]], "update() (gaggle.ga.ga_factory.gafactory class method)": [[3, "gaggle.ga.ga_factory.GAFactory.update"]], "crossover (class in gaggle.operators.crossover.crossover)": [[5, "gaggle.operators.crossover.crossover.Crossover"]], "crossoverfactory (class in gaggle.operators.crossover.crossover_factory)": [[5, "gaggle.operators.crossover.crossover_factory.CrossoverFactory"]], "children_per_crossover (gaggle.operators.crossover.crossover.crossover attribute)": [[5, "gaggle.operators.crossover.crossover.Crossover.children_per_crossover"]], "crossover_individual() (gaggle.operators.crossover.crossover.crossover method)": [[5, "gaggle.operators.crossover.crossover.Crossover.crossover_individual"]], "crossover_pop() (gaggle.operators.crossover.crossover.crossover method)": [[5, "gaggle.operators.crossover.crossover.Crossover.crossover_pop"]], "crossovers (gaggle.operators.crossover.crossover_factory.crossoverfactory attribute)": [[5, "gaggle.operators.crossover.crossover_factory.CrossoverFactory.crossovers"]], "from_ga_args() (gaggle.operators.crossover.crossover_factory.crossoverfactory class method)": [[5, "gaggle.operators.crossover.crossover_factory.CrossoverFactory.from_ga_args"]], "gaggle.operators.crossover.crossover": [[5, "module-gaggle.operators.crossover.crossover"]], "gaggle.operators.crossover.crossover_factory": [[5, "module-gaggle.operators.crossover.crossover_factory"]], "get_keys() (gaggle.operators.crossover.crossover_factory.crossoverfactory class method)": [[5, "gaggle.operators.crossover.crossover_factory.CrossoverFactory.get_keys"]], "mates_per_crossover (gaggle.operators.crossover.crossover.crossover attribute)": [[5, "gaggle.operators.crossover.crossover.Crossover.mates_per_crossover"]], "update() (gaggle.operators.crossover.crossover_factory.crossoverfactory class method)": [[5, "gaggle.operators.crossover.crossover_factory.CrossoverFactory.update"]], "kpointcrossover (class in gaggle.operators.crossover.base_crossovers.k_point_crossover)": [[6, "gaggle.operators.crossover.base_crossovers.k_point_crossover.KPointCrossover"]], "uniformcrossover (class in gaggle.operators.crossover.base_crossovers.uniform_crossover)": [[6, "gaggle.operators.crossover.base_crossovers.uniform_crossover.UniformCrossover"]], "children_per_crossover (gaggle.operators.crossover.base_crossovers.k_point_crossover.kpointcrossover attribute)": [[6, "gaggle.operators.crossover.base_crossovers.k_point_crossover.KPointCrossover.children_per_crossover"]], "children_per_crossover (gaggle.operators.crossover.base_crossovers.uniform_crossover.uniformcrossover attribute)": [[6, "gaggle.operators.crossover.base_crossovers.uniform_crossover.UniformCrossover.children_per_crossover"]], "crossover_individual() (gaggle.operators.crossover.base_crossovers.k_point_crossover.kpointcrossover method)": [[6, "gaggle.operators.crossover.base_crossovers.k_point_crossover.KPointCrossover.crossover_individual"]], "crossover_individual() (gaggle.operators.crossover.base_crossovers.uniform_crossover.uniformcrossover method)": [[6, "gaggle.operators.crossover.base_crossovers.uniform_crossover.UniformCrossover.crossover_individual"]], "deprecated_crossover_individual() (gaggle.operators.crossover.base_crossovers.k_point_crossover.kpointcrossover method)": [[6, "gaggle.operators.crossover.base_crossovers.k_point_crossover.KPointCrossover.deprecated_crossover_individual"]], "gaggle.operators.crossover.base_crossovers.k_point_crossover": [[6, "module-gaggle.operators.crossover.base_crossovers.k_point_crossover"]], "gaggle.operators.crossover.base_crossovers.uniform_crossover": [[6, "module-gaggle.operators.crossover.base_crossovers.uniform_crossover"]], "mates_per_crossover (gaggle.operators.crossover.base_crossovers.k_point_crossover.kpointcrossover attribute)": [[6, "gaggle.operators.crossover.base_crossovers.k_point_crossover.KPointCrossover.mates_per_crossover"]], "mates_per_crossover (gaggle.operators.crossover.base_crossovers.uniform_crossover.uniformcrossover attribute)": [[6, "gaggle.operators.crossover.base_crossovers.uniform_crossover.UniformCrossover.mates_per_crossover"]], "mutation (class in gaggle.operators.mutation.mutation)": [[7, "gaggle.operators.mutation.mutation.Mutation"]], "mutationfactory (class in gaggle.operators.mutation.mutation_factory)": [[7, "gaggle.operators.mutation.mutation_factory.MutationFactory"]], "from_ga_args() (gaggle.operators.mutation.mutation_factory.mutationfactory class method)": [[7, "gaggle.operators.mutation.mutation_factory.MutationFactory.from_ga_args"]], "gaggle.operators.mutation.mutation": [[7, "module-gaggle.operators.mutation.mutation"]], "gaggle.operators.mutation.mutation_factory": [[7, "module-gaggle.operators.mutation.mutation_factory"]], "get_keys() (gaggle.operators.mutation.mutation_factory.mutationfactory class method)": [[7, "gaggle.operators.mutation.mutation_factory.MutationFactory.get_keys"]], "mutate_individual() (gaggle.operators.mutation.mutation.mutation method)": [[7, "gaggle.operators.mutation.mutation.Mutation.mutate_individual"]], "mutate_pop() (gaggle.operators.mutation.mutation.mutation method)": [[7, "gaggle.operators.mutation.mutation.Mutation.mutate_pop"]], "mutations (gaggle.operators.mutation.mutation_factory.mutationfactory attribute)": [[7, "gaggle.operators.mutation.mutation_factory.MutationFactory.mutations"]], "update() (gaggle.operators.mutation.mutation_factory.mutationfactory class method)": [[7, "gaggle.operators.mutation.mutation_factory.MutationFactory.update"]], "normalmutation (class in gaggle.operators.mutation.base_mutations.normal_mutation)": [[8, "gaggle.operators.mutation.base_mutations.normal_mutation.NormalMutation"]], "uniformmutation (class in gaggle.operators.mutation.base_mutations.uniform_mutation)": [[8, "gaggle.operators.mutation.base_mutations.uniform_mutation.UniformMutation"]], "gaggle.operators.mutation.base_mutations.normal_mutation": [[8, "module-gaggle.operators.mutation.base_mutations.normal_mutation"]], "gaggle.operators.mutation.base_mutations.uniform_mutation": [[8, "module-gaggle.operators.mutation.base_mutations.uniform_mutation"]], "mutate_individual() (gaggle.operators.mutation.base_mutations.normal_mutation.normalmutation method)": [[8, "gaggle.operators.mutation.base_mutations.normal_mutation.NormalMutation.mutate_individual"]], "mutate_individual() (gaggle.operators.mutation.base_mutations.uniform_mutation.uniformmutation method)": [[8, "gaggle.operators.mutation.base_mutations.uniform_mutation.UniformMutation.mutate_individual"]], "selection (class in gaggle.operators.selection.selection)": [[9, "gaggle.operators.selection.selection.Selection"]], "selectionfactory (class in gaggle.operators.selection.selection_factory)": [[9, "gaggle.operators.selection.selection_factory.SelectionFactory"]], "from_ga_args() (gaggle.operators.selection.selection_factory.selectionfactory class method)": [[9, "gaggle.operators.selection.selection_factory.SelectionFactory.from_ga_args"]], "gaggle.operators.selection.selection": [[9, "module-gaggle.operators.selection.selection"]], "gaggle.operators.selection.selection_factory": [[9, "module-gaggle.operators.selection.selection_factory"]], "get_keys() (gaggle.operators.selection.selection_factory.selectionfactory class method)": [[9, "gaggle.operators.selection.selection_factory.SelectionFactory.get_keys"]], "select_all() (gaggle.operators.selection.selection.selection method)": [[9, "gaggle.operators.selection.selection.Selection.select_all"]], "select_parents() (gaggle.operators.selection.selection.selection method)": [[9, "gaggle.operators.selection.selection.Selection.select_parents"]], "select_protected() (gaggle.operators.selection.selection.selection method)": [[9, "gaggle.operators.selection.selection.Selection.select_protected"]], "selections (gaggle.operators.selection.selection_factory.selectionfactory attribute)": [[9, "gaggle.operators.selection.selection_factory.SelectionFactory.selections"]], "update() (gaggle.operators.selection.selection_factory.selectionfactory class method)": [[9, "gaggle.operators.selection.selection_factory.SelectionFactory.update"]], "probabilistictournamentselection (class in gaggle.operators.selection.base_selections.probabilistic_tournament_selection)": [[10, "gaggle.operators.selection.base_selections.probabilistic_tournament_selection.ProbabilisticTournamentSelection"]], "relativeweightedselection (class in gaggle.operators.selection.base_selections.relative_weighted_selection)": [[10, "gaggle.operators.selection.base_selections.relative_weighted_selection.RelativeWeightedSelection"]], "simpletournamentselection (class in gaggle.operators.selection.base_selections.simple_tournament_selection)": [[10, "gaggle.operators.selection.base_selections.simple_tournament_selection.SimpleTournamentSelection"]], "truncationselection (class in gaggle.operators.selection.base_selections.truncation_selection)": [[10, "gaggle.operators.selection.base_selections.truncation_selection.TruncationSelection"]], "weightedselection (class in gaggle.operators.selection.base_selections.weighted_selection)": [[10, "gaggle.operators.selection.base_selections.weighted_selection.WeightedSelection"]], "choice() (in module gaggle.operators.selection.base_selections.probabilistic_tournament_selection)": [[10, "gaggle.operators.selection.base_selections.probabilistic_tournament_selection.choice"]], "choice() (in module gaggle.operators.selection.base_selections.relative_weighted_selection)": [[10, "gaggle.operators.selection.base_selections.relative_weighted_selection.choice"]], "choice() (in module gaggle.operators.selection.base_selections.simple_tournament_selection)": [[10, "gaggle.operators.selection.base_selections.simple_tournament_selection.choice"]], "choice() (in module gaggle.operators.selection.base_selections.weighted_selection)": [[10, "gaggle.operators.selection.base_selections.weighted_selection.choice"]], "gaggle.operators.selection.base_selections.probabilistic_tournament_selection": [[10, "module-gaggle.operators.selection.base_selections.probabilistic_tournament_selection"]], "gaggle.operators.selection.base_selections.relative_weighted_selection": [[10, "module-gaggle.operators.selection.base_selections.relative_weighted_selection"]], "gaggle.operators.selection.base_selections.simple_tournament_selection": [[10, "module-gaggle.operators.selection.base_selections.simple_tournament_selection"]], "gaggle.operators.selection.base_selections.truncation_selection": [[10, "module-gaggle.operators.selection.base_selections.truncation_selection"]], "gaggle.operators.selection.base_selections.weighted_selection": [[10, "module-gaggle.operators.selection.base_selections.weighted_selection"]], "select_parents() (gaggle.operators.selection.base_selections.probabilistic_tournament_selection.probabilistictournamentselection method)": [[10, "gaggle.operators.selection.base_selections.probabilistic_tournament_selection.ProbabilisticTournamentSelection.select_parents"]], "select_parents() (gaggle.operators.selection.base_selections.relative_weighted_selection.relativeweightedselection method)": [[10, "gaggle.operators.selection.base_selections.relative_weighted_selection.RelativeWeightedSelection.select_parents"]], "select_parents() (gaggle.operators.selection.base_selections.simple_tournament_selection.simpletournamentselection method)": [[10, "gaggle.operators.selection.base_selections.simple_tournament_selection.SimpleTournamentSelection.select_parents"]], "select_parents() (gaggle.operators.selection.base_selections.truncation_selection.truncationselection method)": [[10, "gaggle.operators.selection.base_selections.truncation_selection.TruncationSelection.select_parents"]], "select_parents() (gaggle.operators.selection.base_selections.weighted_selection.weightedselection method)": [[10, "gaggle.operators.selection.base_selections.weighted_selection.WeightedSelection.select_parents"]], "tournament() (gaggle.operators.selection.base_selections.probabilistic_tournament_selection.probabilistictournamentselection method)": [[10, "gaggle.operators.selection.base_selections.probabilistic_tournament_selection.ProbabilisticTournamentSelection.tournament"]], "tournament() (gaggle.operators.selection.base_selections.simple_tournament_selection.simpletournamentselection method)": [[10, "gaggle.operators.selection.base_selections.simple_tournament_selection.SimpleTournamentSelection.tournament"]], "config_gene_pool (gaggle.population.individual.individual attribute)": [[11, "gaggle.population.individual.Individual.CONFIG_GENE_POOL"]], "config_individual_args (gaggle.population.individual.individual attribute)": [[11, "gaggle.population.individual.Individual.CONFIG_INDIVIDUAL_ARGS"]], "individual (class in gaggle.population.individual)": [[11, "gaggle.population.individual.Individual"]], "individualfactory (class in gaggle.population.individual_factory)": [[11, "gaggle.population.individual_factory.IndividualFactory"]], "populationmanager (class in gaggle.population.population_manager)": [[11, "gaggle.population.population_manager.PopulationManager"]], "apply_bounds() (gaggle.population.individual.individual method)": [[11, "gaggle.population.individual.Individual.apply_bounds"]], "apply_bounds() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.apply_bounds"]], "clip() (gaggle.population.individual.individual static method)": [[11, "gaggle.population.individual.Individual.clip"]], "create_buffer() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.create_buffer"]], "eval() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.eval"]], "forward() (gaggle.population.individual.individual method)": [[11, "gaggle.population.individual.Individual.forward"]], "from_individual_args() (gaggle.population.individual_factory.individualfactory class method)": [[11, "gaggle.population.individual_factory.IndividualFactory.from_individual_args"]], "gaggle.population.individual": [[11, "module-gaggle.population.individual"]], "gaggle.population.individual_factory": [[11, "module-gaggle.population.individual_factory"]], "gaggle.population.population_manager": [[11, "module-gaggle.population.population_manager"]], "generate_gene_pool() (gaggle.population.individual.individual method)": [[11, "gaggle.population.individual.Individual.generate_gene_pool"]], "get_buffer() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.get_buffer"]], "get_fitness() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.get_fitness"]], "get_freshness() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.get_freshness"]], "get_gene_count() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.get_gene_count"]], "get_gene_pool() (gaggle.population.individual.individual method)": [[11, "gaggle.population.individual.Individual.get_gene_pool"]], "get_genome_size() (gaggle.population.individual.individual method)": [[11, "gaggle.population.individual.Individual.get_genome_size"]], "get_individual() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.get_individual"]], "get_individual_fitness() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.get_individual_fitness"]], "get_mating_tuples() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.get_mating_tuples"]], "get_num_protected() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.get_num_protected"]], "get_parents() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.get_parents"]], "get_population() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.get_population"]], "get_protected() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.get_protected"]], "get_to_mutate() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.get_to_mutate"]], "individuals (gaggle.population.individual_factory.individualfactory attribute)": [[11, "gaggle.population.individual_factory.IndividualFactory.individuals"]], "initialize() (gaggle.population.individual.individual method)": [[11, "gaggle.population.individual.Individual.initialize"]], "is_fresh() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.is_fresh"]], "save() (gaggle.population.individual.individual method)": [[11, "gaggle.population.individual.Individual.save"]], "set_freshness() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.set_freshness"]], "set_individual_fitness() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.set_individual_fitness"]], "train() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.train"]], "update() (gaggle.population.individual_factory.individualfactory class method)": [[11, "gaggle.population.individual_factory.IndividualFactory.update"]], "update_buffer() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.update_buffer"]], "update_mating_tuples() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.update_mating_tuples"]], "update_parents() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.update_parents"]], "update_population() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.update_population"]], "update_protected() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.update_protected"]], "update_to_mutate() (gaggle.population.population_manager.populationmanager method)": [[11, "gaggle.population.population_manager.PopulationManager.update_to_mutate"]], "config_base_model_state_dict (gaggle.population.base_individuals.nn_individual.nnindividual attribute)": [[12, "gaggle.population.base_individuals.nn_individual.NNIndividual.CONFIG_BASE_MODEL_STATE_DICT"]], "nnindividual (class in gaggle.population.base_individuals.nn_individual)": [[12, "gaggle.population.base_individuals.nn_individual.NNIndividual"]], "numpyindividual (class in gaggle.population.base_individuals.numpy_individual)": [[12, "gaggle.population.base_individuals.numpy_individual.NumpyIndividual"]], "pytorchindividual (class in gaggle.population.base_individuals.pytorch_individual)": [[12, "gaggle.population.base_individuals.pytorch_individual.PytorchIndividual"]], "rlindividual (class in gaggle.population.base_individuals.rl_individual)": [[12, "gaggle.population.base_individuals.rl_individual.RLIndividual"]], "debug() (gaggle.population.base_individuals.nn_individual.nnindividual method)": [[12, "gaggle.population.base_individuals.nn_individual.NNIndividual.debug"]], "debug_tick() (gaggle.population.base_individuals.nn_individual.nnindividual method)": [[12, "gaggle.population.base_individuals.nn_individual.NNIndividual.debug_tick"]], "eval() (gaggle.population.base_individuals.nn_individual.nnindividual method)": [[12, "gaggle.population.base_individuals.nn_individual.NNIndividual.eval"]], "first_time() (gaggle.population.base_individuals.nn_individual.nnindividual method)": [[12, "gaggle.population.base_individuals.nn_individual.NNIndividual.first_time"]], "forward() (gaggle.population.base_individuals.nn_individual.nnindividual method)": [[12, "gaggle.population.base_individuals.nn_individual.NNIndividual.forward"]], "forward() (gaggle.population.base_individuals.numpy_individual.numpyindividual method)": [[12, "gaggle.population.base_individuals.numpy_individual.NumpyIndividual.forward"]], "forward() (gaggle.population.base_individuals.pytorch_individual.pytorchindividual method)": [[12, "gaggle.population.base_individuals.pytorch_individual.PytorchIndividual.forward"]], "forward() (gaggle.population.base_individuals.rl_individual.rlindividual method)": [[12, "gaggle.population.base_individuals.rl_individual.RLIndividual.forward"]], "gaggle.population.base_individuals.nn_individual": [[12, "module-gaggle.population.base_individuals.nn_individual"]], "gaggle.population.base_individuals.numpy_individual": [[12, "module-gaggle.population.base_individuals.numpy_individual"]], "gaggle.population.base_individuals.pytorch_individual": [[12, "module-gaggle.population.base_individuals.pytorch_individual"]], "gaggle.population.base_individuals.rl_individual": [[12, "module-gaggle.population.base_individuals.rl_individual"]], "generate_gene_pool() (gaggle.population.base_individuals.nn_individual.nnindividual method)": [[12, "gaggle.population.base_individuals.nn_individual.NNIndividual.generate_gene_pool"]], "generate_gene_pool() (gaggle.population.base_individuals.numpy_individual.numpyindividual method)": [[12, "gaggle.population.base_individuals.numpy_individual.NumpyIndividual.generate_gene_pool"]], "generate_gene_pool() (gaggle.population.base_individuals.pytorch_individual.pytorchindividual method)": [[12, "gaggle.population.base_individuals.pytorch_individual.PytorchIndividual.generate_gene_pool"]], "initialize() (gaggle.population.base_individuals.nn_individual.nnindividual method)": [[12, "gaggle.population.base_individuals.nn_individual.NNIndividual.initialize"]], "initialize() (gaggle.population.base_individuals.numpy_individual.numpyindividual method)": [[12, "gaggle.population.base_individuals.numpy_individual.NumpyIndividual.initialize"]], "initialize() (gaggle.population.base_individuals.pytorch_individual.pytorchindividual method)": [[12, "gaggle.population.base_individuals.pytorch_individual.PytorchIndividual.initialize"]], "load() (gaggle.population.base_individuals.nn_individual.nnindividual method)": [[12, "gaggle.population.base_individuals.nn_individual.NNIndividual.load"]], "parameters() (gaggle.population.base_individuals.nn_individual.nnindividual method)": [[12, "gaggle.population.base_individuals.nn_individual.NNIndividual.parameters"]], "save() (gaggle.population.base_individuals.nn_individual.nnindividual method)": [[12, "gaggle.population.base_individuals.nn_individual.NNIndividual.save"]], "train() (gaggle.population.base_individuals.nn_individual.nnindividual method)": [[12, "gaggle.population.base_individuals.nn_individual.NNIndividual.train"]], "problem (class in gaggle.problem.problem)": [[13, "gaggle.problem.problem.Problem"]], "problemfactory (class in gaggle.problem.problem_factory)": [[13, "gaggle.problem.problem_factory.ProblemFactory"]], "convert_and_register_leap_problem() (gaggle.problem.problem_factory.problemfactory class method)": [[13, "gaggle.problem.problem_factory.ProblemFactory.convert_and_register_leap_problem"]], "evaluate() (gaggle.problem.problem.problem method)": [[13, "gaggle.problem.problem.Problem.evaluate"]], "evaluate_population() (gaggle.problem.problem.problem method)": [[13, "gaggle.problem.problem.Problem.evaluate_population"]], "from_problem_args() (gaggle.problem.problem_factory.problemfactory class method)": [[13, "gaggle.problem.problem_factory.ProblemFactory.from_problem_args"]], "gaggle.problem.problem": [[13, "module-gaggle.problem.problem"]], "gaggle.problem.problem_factory": [[13, "module-gaggle.problem.problem_factory"]], "problems (gaggle.problem.problem_factory.problemfactory attribute)": [[13, "gaggle.problem.problem_factory.ProblemFactory.problems"]], "register_problem() (gaggle.problem.problem_factory.problemfactory class method)": [[13, "gaggle.problem.problem_factory.ProblemFactory.register_problem"]], "registrable_problems (gaggle.problem.problem_factory.problemfactory attribute)": [[13, "gaggle.problem.problem_factory.ProblemFactory.registrable_problems"]], "functionalproblem (class in gaggle.problem.base_problems.functional_problem)": [[14, "gaggle.problem.base_problems.functional_problem.FunctionalProblem"]], "evaluate() (gaggle.problem.base_problems.functional_problem.functionalproblem method)": [[14, "gaggle.problem.base_problems.functional_problem.FunctionalProblem.evaluate"]], "gaggle.problem.base_problems.functional_problem": [[14, "module-gaggle.problem.base_problems.functional_problem"]], "classificationproblem (class in gaggle.problem.dataset.classification_problem)": [[15, "gaggle.problem.dataset.classification_problem.ClassificationProblem"]], "datawrapper (class in gaggle.problem.dataset.dataset)": [[15, "gaggle.problem.dataset.dataset.DataWrapper"]], "dataset (class in gaggle.problem.dataset.dataset)": [[15, "gaggle.problem.dataset.dataset.Dataset"]], "datasetfactory (class in gaggle.problem.dataset.dataset_factory)": [[15, "gaggle.problem.dataset.dataset_factory.DatasetFactory"]], "copy() (gaggle.problem.dataset.dataset.dataset method)": [[15, "gaggle.problem.dataset.dataset.Dataset.copy"]], "datasets (gaggle.problem.dataset.dataset_factory.datasetfactory attribute)": [[15, "gaggle.problem.dataset.dataset_factory.DatasetFactory.datasets"]], "enable_normalization() (gaggle.problem.dataset.dataset.dataset method)": [[15, "gaggle.problem.dataset.dataset.Dataset.enable_normalization"]], "evaluate() (gaggle.problem.dataset.classification_problem.classificationproblem method)": [[15, "gaggle.problem.dataset.classification_problem.ClassificationProblem.evaluate"]], "evaluate_population() (gaggle.problem.dataset.classification_problem.classificationproblem method)": [[15, "gaggle.problem.dataset.classification_problem.ClassificationProblem.evaluate_population"]], "from_data() (gaggle.problem.dataset.dataset_factory.datasetfactory static method)": [[15, "gaggle.problem.dataset.dataset_factory.DatasetFactory.from_data"]], "from_problem_args() (gaggle.problem.dataset.dataset_factory.datasetfactory class method)": [[15, "gaggle.problem.dataset.dataset_factory.DatasetFactory.from_problem_args"]], "gaggle.problem.dataset.classification_problem": [[15, "module-gaggle.problem.dataset.classification_problem"]], "gaggle.problem.dataset.dataset": [[15, "module-gaggle.problem.dataset.dataset"]], "gaggle.problem.dataset.dataset_factory": [[15, "module-gaggle.problem.dataset.dataset_factory"]], "get_data_and_targets() (gaggle.problem.dataset.dataset.dataset method)": [[15, "gaggle.problem.dataset.dataset.Dataset.get_data_and_targets"]], "get_data_and_transform() (gaggle.problem.dataset.dataset.dataset method)": [[15, "gaggle.problem.dataset.dataset.Dataset.get_data_and_transform"]], "get_keys() (gaggle.problem.dataset.dataset_factory.datasetfactory class method)": [[15, "gaggle.problem.dataset.dataset_factory.DatasetFactory.get_keys"]], "num_classes() (gaggle.problem.dataset.dataset.dataset method)": [[15, "gaggle.problem.dataset.dataset.Dataset.num_classes"]], "print_class_distribution() (gaggle.problem.dataset.dataset.dataset method)": [[15, "gaggle.problem.dataset.dataset.Dataset.print_class_distribution"]], "random_subset() (gaggle.problem.dataset.dataset.dataset method)": [[15, "gaggle.problem.dataset.dataset.Dataset.random_subset"]], "remove_classes() (gaggle.problem.dataset.dataset.dataset method)": [[15, "gaggle.problem.dataset.dataset.Dataset.remove_classes"]], "size() (gaggle.problem.dataset.dataset.dataset method)": [[15, "gaggle.problem.dataset.dataset.Dataset.size"]], "subset() (gaggle.problem.dataset.dataset.dataset method)": [[15, "gaggle.problem.dataset.dataset.Dataset.subset"]], "update() (gaggle.problem.dataset.dataset_factory.datasetfactory class method)": [[15, "gaggle.problem.dataset.dataset_factory.DatasetFactory.update"]], "visualize() (gaggle.problem.dataset.dataset.dataset method)": [[15, "gaggle.problem.dataset.dataset.Dataset.visualize"]], "without_normalization() (gaggle.problem.dataset.dataset.dataset method)": [[15, "gaggle.problem.dataset.dataset.Dataset.without_normalization"]], "cifar10 (class in gaggle.problem.dataset.base_datasets.cifar10)": [[16, "gaggle.problem.dataset.base_datasets.cifar10.CIFAR10"]], "mnist (class in gaggle.problem.dataset.base_datasets.mnist)": [[16, "gaggle.problem.dataset.base_datasets.mnist.MNIST"]], "gaggle.problem.dataset.base_datasets.cifar10": [[16, "module-gaggle.problem.dataset.base_datasets.cifar10"]], "gaggle.problem.dataset.base_datasets.mnist": [[16, "module-gaggle.problem.dataset.base_datasets.mnist"]], "get_data_and_targets() (gaggle.problem.dataset.base_datasets.cifar10.cifar10 method)": [[16, "gaggle.problem.dataset.base_datasets.cifar10.CIFAR10.get_data_and_targets"]], "get_data_and_targets() (gaggle.problem.dataset.base_datasets.mnist.mnist method)": [[16, "gaggle.problem.dataset.base_datasets.mnist.MNIST.get_data_and_targets"]], "environmentfactory (class in gaggle.problem.environment.environment_factory)": [[17, "gaggle.problem.environment.environment_factory.EnvironmentFactory"]], "gymwrapper (class in gaggle.problem.environment.environment_factory)": [[17, "gaggle.problem.environment.environment_factory.GymWrapper"]], "rlproblem (class in gaggle.problem.environment.rl_problem)": [[17, "gaggle.problem.environment.rl_problem.RLProblem"]], "environments (gaggle.problem.environment.environment_factory.environmentfactory attribute)": [[17, "gaggle.problem.environment.environment_factory.EnvironmentFactory.environments"]], "evaluate() (gaggle.problem.environment.rl_problem.rlproblem method)": [[17, "gaggle.problem.environment.rl_problem.RLProblem.evaluate"]], "from_gym_env_id() (gaggle.problem.environment.environment_factory.environmentfactory class method)": [[17, "gaggle.problem.environment.environment_factory.EnvironmentFactory.from_gym_env_id"]], "from_problem_args() (gaggle.problem.environment.environment_factory.environmentfactory class method)": [[17, "gaggle.problem.environment.environment_factory.EnvironmentFactory.from_problem_args"]], "gaggle.problem.environment.environment_factory": [[17, "module-gaggle.problem.environment.environment_factory"]], "gaggle.problem.environment.rl_problem": [[17, "module-gaggle.problem.environment.rl_problem"]], "get_keys() (gaggle.problem.environment.environment_factory.environmentfactory class method)": [[17, "gaggle.problem.environment.environment_factory.EnvironmentFactory.get_keys"]], "update() (gaggle.problem.environment.environment_factory.environmentfactory class method)": [[17, "gaggle.problem.environment.environment_factory.EnvironmentFactory.update"]], "leapproblem (class in gaggle.problem.leap.leap_problem)": [[18, "gaggle.problem.leap.leap_problem.LeapProblem"]], "registrableleapproblem (class in gaggle.problem.leap.leap_problem)": [[18, "gaggle.problem.leap.leap_problem.RegistrableLeapProblem"]], "convert_leap_problem() (in module gaggle.problem.leap.leap_problem)": [[18, "gaggle.problem.leap.leap_problem.convert_leap_problem"]], "evaluate() (gaggle.problem.leap.leap_problem.leapproblem method)": [[18, "gaggle.problem.leap.leap_problem.LeapProblem.evaluate"]], "gaggle.problem.leap.leap_problem": [[18, "module-gaggle.problem.leap.leap_problem"]], "gasupervisor (class in gaggle.supervisor.ga_supervisor)": [[19, "gaggle.supervisor.ga_supervisor.GASupervisor"]], "gaggle.supervisor.ga_supervisor": [[19, "module-gaggle.supervisor.ga_supervisor"]], "run() (gaggle.supervisor.ga_supervisor.gasupervisor method)": [[19, "gaggle.supervisor.ga_supervisor.GASupervisor.run"]], "set_custom_fitness() (gaggle.supervisor.ga_supervisor.gasupervisor method)": [[19, "gaggle.supervisor.ga_supervisor.GASupervisor.set_custom_fitness"]], "bold (gaggle.utils.special_print.bcolors attribute)": [[20, "gaggle.utils.special_print.bcolors.BOLD"]], "endc (gaggle.utils.special_print.bcolors attribute)": [[20, "gaggle.utils.special_print.bcolors.ENDC"]], "fail (gaggle.utils.special_print.bcolors attribute)": [[20, "gaggle.utils.special_print.bcolors.FAIL"]], "header (gaggle.utils.special_print.bcolors attribute)": [[20, "gaggle.utils.special_print.bcolors.HEADER"]], "okblue (gaggle.utils.special_print.bcolors attribute)": [[20, "gaggle.utils.special_print.bcolors.OKBLUE"]], "okcyan (gaggle.utils.special_print.bcolors attribute)": [[20, "gaggle.utils.special_print.bcolors.OKCYAN"]], "okgreen (gaggle.utils.special_print.bcolors attribute)": [[20, "gaggle.utils.special_print.bcolors.OKGREEN"]], "smoothedvalue (class in gaggle.utils.smooth_value)": [[20, "gaggle.utils.smooth_value.SmoothedValue"]], "underline (gaggle.utils.special_print.bcolors attribute)": [[20, "gaggle.utils.special_print.bcolors.UNDERLINE"]], "unnormalize (class in gaggle.utils.torch_helper)": [[20, "gaggle.utils.torch_helper.UnNormalize"]], "warning (gaggle.utils.special_print.bcolors attribute)": [[20, "gaggle.utils.special_print.bcolors.WARNING"]], "accuracy() (in module gaggle.utils.metrics)": [[20, "gaggle.utils.metrics.accuracy"]], "avg (gaggle.utils.smooth_value.smoothedvalue property)": [[20, "gaggle.utils.smooth_value.SmoothedValue.avg"]], "bcolors (class in gaggle.utils.special_print)": [[20, "gaggle.utils.special_print.bcolors"]], "from_gene_pool() (in module gaggle.utils.individual_helper)": [[20, "gaggle.utils.individual_helper.from_gene_pool"]], "from_gene_pool_no_metadata() (in module gaggle.utils.individual_helper)": [[20, "gaggle.utils.individual_helper.from_gene_pool_no_metadata"]], "from_tensor() (in module gaggle.utils.individual_helper)": [[20, "gaggle.utils.individual_helper.from_tensor"]], "gaggle.utils.individual_helper": [[20, "module-gaggle.utils.individual_helper"]], "gaggle.utils.metrics": [[20, "module-gaggle.utils.metrics"]], "gaggle.utils.numpy_helper": [[20, "module-gaggle.utils.numpy_helper"]], "gaggle.utils.smooth_value": [[20, "module-gaggle.utils.smooth_value"]], "gaggle.utils.special_images": [[20, "module-gaggle.utils.special_images"]], "gaggle.utils.special_print": [[20, "module-gaggle.utils.special_print"]], "gaggle.utils.torch_helper": [[20, "module-gaggle.utils.torch_helper"]], "gaggle.utils.web": [[20, "module-gaggle.utils.web"]], "global_avg (gaggle.utils.smooth_value.smoothedvalue property)": [[20, "gaggle.utils.smooth_value.SmoothedValue.global_avg"]], "image_to_tensor() (in module gaggle.utils.special_images)": [[20, "gaggle.utils.special_images.image_to_tensor"]], "is_valid_url() (in module gaggle.utils.web)": [[20, "gaggle.utils.web.is_valid_url"]], "max (gaggle.utils.smooth_value.smoothedvalue property)": [[20, "gaggle.utils.smooth_value.SmoothedValue.max"]], "median (gaggle.utils.smooth_value.smoothedvalue property)": [[20, "gaggle.utils.smooth_value.SmoothedValue.median"]], "min (gaggle.utils.smooth_value.smoothedvalue property)": [[20, "gaggle.utils.smooth_value.SmoothedValue.min"]], "plot_images() (in module gaggle.utils.special_images)": [[20, "gaggle.utils.special_images.plot_images"]], "print_dict_highlighted() (in module gaggle.utils.special_print)": [[20, "gaggle.utils.special_print.print_dict_highlighted"]], "print_highlighted() (in module gaggle.utils.special_print)": [[20, "gaggle.utils.special_print.print_highlighted"]], "print_response() (in module gaggle.utils.special_print)": [[20, "gaggle.utils.special_print.print_response"]], "print_warning() (in module gaggle.utils.special_print)": [[20, "gaggle.utils.special_print.print_warning"]], "reset() (gaggle.utils.smooth_value.smoothedvalue method)": [[20, "gaggle.utils.smooth_value.SmoothedValue.reset"]], "set_multiple_indices_to_zero() (in module gaggle.utils.torch_helper)": [[20, "gaggle.utils.torch_helper.set_multiple_indices_to_zero"]], "tensor_hash() (in module gaggle.utils.torch_helper)": [[20, "gaggle.utils.torch_helper.tensor_hash"]], "tmp_seed() (in module gaggle.utils.numpy_helper)": [[20, "gaggle.utils.numpy_helper.tmp_seed"]], "update() (gaggle.utils.smooth_value.smoothedvalue method)": [[20, "gaggle.utils.smooth_value.SmoothedValue.update"]], "update_list() (gaggle.utils.smooth_value.smoothedvalue method)": [[20, "gaggle.utils.smooth_value.SmoothedValue.update_list"]], "value (gaggle.utils.smooth_value.smoothedvalue property)": [[20, "gaggle.utils.smooth_value.SmoothedValue.value"]], "yield_batches() (in module gaggle.utils.torch_helper)": [[20, "gaggle.utils.torch_helper.yield_batches"]]}})